// Code generated by protoc-gen-go. DO NOT EDIT.
// source: nlpserv.proto

package nlpserv

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type NlPinyinRequest_PinyinPresentation int32

const (
	NlPinyinRequest_NUMBER         NlPinyinRequest_PinyinPresentation = 0
	NlPinyinRequest_WITH_TONE_MARK NlPinyinRequest_PinyinPresentation = 1
	NlPinyinRequest_WITHOUT_TONE   NlPinyinRequest_PinyinPresentation = 2
)

var NlPinyinRequest_PinyinPresentation_name = map[int32]string{
	0: "NUMBER",
	1: "WITH_TONE_MARK",
	2: "WITHOUT_TONE",
}

var NlPinyinRequest_PinyinPresentation_value = map[string]int32{
	"NUMBER":         0,
	"WITH_TONE_MARK": 1,
	"WITHOUT_TONE":   2,
}

func (x NlPinyinRequest_PinyinPresentation) String() string {
	return proto.EnumName(NlPinyinRequest_PinyinPresentation_name, int32(x))
}

func (NlPinyinRequest_PinyinPresentation) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_78db526053ee6862, []int{15, 0}
}

type NlCabochaToken struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AdditionalInfo       string   `protobuf:"bytes,2,opt,name=additional_info,json=additionalInfo,proto3" json:"additional_info,omitempty"`
	FeatureList          []string `protobuf:"bytes,3,rep,name=feature_list,json=featureList,proto3" json:"feature_list,omitempty"`
	Ne                   string   `protobuf:"bytes,4,opt,name=ne,proto3" json:"ne,omitempty"`
	NormalizedSurface    string   `protobuf:"bytes,5,opt,name=normalized_surface,json=normalizedSurface,proto3" json:"normalized_surface,omitempty"`
	Surface              string   `protobuf:"bytes,6,opt,name=surface,proto3" json:"surface,omitempty"`
	Pos                  string   `protobuf:"bytes,7,opt,name=pos,proto3" json:"pos,omitempty"`
	Pos1                 string   `protobuf:"bytes,8,opt,name=pos1,proto3" json:"pos1,omitempty"`
	Pos2                 string   `protobuf:"bytes,9,opt,name=pos2,proto3" json:"pos2,omitempty"`
	Pos3                 string   `protobuf:"bytes,10,opt,name=pos3,proto3" json:"pos3,omitempty"`
	Ctype                string   `protobuf:"bytes,11,opt,name=ctype,proto3" json:"ctype,omitempty"`
	Cform                string   `protobuf:"bytes,12,opt,name=cform,proto3" json:"cform,omitempty"`
	Genkei               string   `protobuf:"bytes,13,opt,name=genkei,proto3" json:"genkei,omitempty"`
	Yomi                 string   `protobuf:"bytes,14,opt,name=yomi,proto3" json:"yomi,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NlCabochaToken) Reset()         { *m = NlCabochaToken{} }
func (m *NlCabochaToken) String() string { return proto.CompactTextString(m) }
func (*NlCabochaToken) ProtoMessage()    {}
func (*NlCabochaToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_78db526053ee6862, []int{0}
}

func (m *NlCabochaToken) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NlCabochaToken.Unmarshal(m, b)
}
func (m *NlCabochaToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NlCabochaToken.Marshal(b, m, deterministic)
}
func (m *NlCabochaToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NlCabochaToken.Merge(m, src)
}
func (m *NlCabochaToken) XXX_Size() int {
	return xxx_messageInfo_NlCabochaToken.Size(m)
}
func (m *NlCabochaToken) XXX_DiscardUnknown() {
	xxx_messageInfo_NlCabochaToken.DiscardUnknown(m)
}

var xxx_messageInfo_NlCabochaToken proto.InternalMessageInfo

func (m *NlCabochaToken) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *NlCabochaToken) GetAdditionalInfo() string {
	if m != nil {
		return m.AdditionalInfo
	}
	return ""
}

func (m *NlCabochaToken) GetFeatureList() []string {
	if m != nil {
		return m.FeatureList
	}
	return nil
}

func (m *NlCabochaToken) GetNe() string {
	if m != nil {
		return m.Ne
	}
	return ""
}

func (m *NlCabochaToken) GetNormalizedSurface() string {
	if m != nil {
		return m.NormalizedSurface
	}
	return ""
}

func (m *NlCabochaToken) GetSurface() string {
	if m != nil {
		return m.Surface
	}
	return ""
}

func (m *NlCabochaToken) GetPos() string {
	if m != nil {
		return m.Pos
	}
	return ""
}

func (m *NlCabochaToken) GetPos1() string {
	if m != nil {
		return m.Pos1
	}
	return ""
}

func (m *NlCabochaToken) GetPos2() string {
	if m != nil {
		return m.Pos2
	}
	return ""
}

func (m *NlCabochaToken) GetPos3() string {
	if m != nil {
		return m.Pos3
	}
	return ""
}

func (m *NlCabochaToken) GetCtype() string {
	if m != nil {
		return m.Ctype
	}
	return ""
}

func (m *NlCabochaToken) GetCform() string {
	if m != nil {
		return m.Cform
	}
	return ""
}

func (m *NlCabochaToken) GetGenkei() string {
	if m != nil {
		return m.Genkei
	}
	return ""
}

func (m *NlCabochaToken) GetYomi() string {
	if m != nil {
		return m.Yomi
	}
	return ""
}

type NlCabochaChunk struct {
	Id                   int32             `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AdditionalInfo       string            `protobuf:"bytes,2,opt,name=additional_info,json=additionalInfo,proto3" json:"additional_info,omitempty"`
	FeatureList          []string          `protobuf:"bytes,3,rep,name=feature_list,json=featureList,proto3" json:"feature_list,omitempty"`
	FuncPos              int32             `protobuf:"varint,4,opt,name=func_pos,json=funcPos,proto3" json:"func_pos,omitempty"`
	HeadPos              int32             `protobuf:"varint,5,opt,name=head_pos,json=headPos,proto3" json:"head_pos,omitempty"`
	Link                 int32             `protobuf:"varint,6,opt,name=link,proto3" json:"link,omitempty"`
	Score                float32           `protobuf:"fixed32,7,opt,name=score,proto3" json:"score,omitempty"`
	TokenPos             int32             `protobuf:"varint,8,opt,name=token_pos,json=tokenPos,proto3" json:"token_pos,omitempty"`
	NextLinkId           int32             `protobuf:"varint,9,opt,name=next_link_id,json=nextLinkId,proto3" json:"next_link_id,omitempty"`
	PrevLinkIds          []int32           `protobuf:"varint,10,rep,packed,name=prev_link_ids,json=prevLinkIds,proto3" json:"prev_link_ids,omitempty"`
	Tokens               []*NlCabochaToken `protobuf:"bytes,11,rep,name=tokens,proto3" json:"tokens,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *NlCabochaChunk) Reset()         { *m = NlCabochaChunk{} }
func (m *NlCabochaChunk) String() string { return proto.CompactTextString(m) }
func (*NlCabochaChunk) ProtoMessage()    {}
func (*NlCabochaChunk) Descriptor() ([]byte, []int) {
	return fileDescriptor_78db526053ee6862, []int{1}
}

func (m *NlCabochaChunk) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NlCabochaChunk.Unmarshal(m, b)
}
func (m *NlCabochaChunk) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NlCabochaChunk.Marshal(b, m, deterministic)
}
func (m *NlCabochaChunk) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NlCabochaChunk.Merge(m, src)
}
func (m *NlCabochaChunk) XXX_Size() int {
	return xxx_messageInfo_NlCabochaChunk.Size(m)
}
func (m *NlCabochaChunk) XXX_DiscardUnknown() {
	xxx_messageInfo_NlCabochaChunk.DiscardUnknown(m)
}

var xxx_messageInfo_NlCabochaChunk proto.InternalMessageInfo

func (m *NlCabochaChunk) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *NlCabochaChunk) GetAdditionalInfo() string {
	if m != nil {
		return m.AdditionalInfo
	}
	return ""
}

func (m *NlCabochaChunk) GetFeatureList() []string {
	if m != nil {
		return m.FeatureList
	}
	return nil
}

func (m *NlCabochaChunk) GetFuncPos() int32 {
	if m != nil {
		return m.FuncPos
	}
	return 0
}

func (m *NlCabochaChunk) GetHeadPos() int32 {
	if m != nil {
		return m.HeadPos
	}
	return 0
}

func (m *NlCabochaChunk) GetLink() int32 {
	if m != nil {
		return m.Link
	}
	return 0
}

func (m *NlCabochaChunk) GetScore() float32 {
	if m != nil {
		return m.Score
	}
	return 0
}

func (m *NlCabochaChunk) GetTokenPos() int32 {
	if m != nil {
		return m.TokenPos
	}
	return 0
}

func (m *NlCabochaChunk) GetNextLinkId() int32 {
	if m != nil {
		return m.NextLinkId
	}
	return 0
}

func (m *NlCabochaChunk) GetPrevLinkIds() []int32 {
	if m != nil {
		return m.PrevLinkIds
	}
	return nil
}

func (m *NlCabochaChunk) GetTokens() []*NlCabochaToken {
	if m != nil {
		return m.Tokens
	}
	return nil
}

type NlCabochaChunks struct {
	Chunks               []*NlCabochaChunk `protobuf:"bytes,1,rep,name=chunks,proto3" json:"chunks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *NlCabochaChunks) Reset()         { *m = NlCabochaChunks{} }
func (m *NlCabochaChunks) String() string { return proto.CompactTextString(m) }
func (*NlCabochaChunks) ProtoMessage()    {}
func (*NlCabochaChunks) Descriptor() ([]byte, []int) {
	return fileDescriptor_78db526053ee6862, []int{2}
}

func (m *NlCabochaChunks) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NlCabochaChunks.Unmarshal(m, b)
}
func (m *NlCabochaChunks) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NlCabochaChunks.Marshal(b, m, deterministic)
}
func (m *NlCabochaChunks) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NlCabochaChunks.Merge(m, src)
}
func (m *NlCabochaChunks) XXX_Size() int {
	return xxx_messageInfo_NlCabochaChunks.Size(m)
}
func (m *NlCabochaChunks) XXX_DiscardUnknown() {
	xxx_messageInfo_NlCabochaChunks.DiscardUnknown(m)
}

var xxx_messageInfo_NlCabochaChunks proto.InternalMessageInfo

func (m *NlCabochaChunks) GetChunks() []*NlCabochaChunk {
	if m != nil {
		return m.Chunks
	}
	return nil
}

type NlEntity struct {
	Entity               string   `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Start                int32    `protobuf:"varint,3,opt,name=start,proto3" json:"start,omitempty"`
	Confidence           float32  `protobuf:"fixed32,4,opt,name=confidence,proto3" json:"confidence,omitempty"`
	End                  int32    `protobuf:"varint,5,opt,name=end,proto3" json:"end,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NlEntity) Reset()         { *m = NlEntity{} }
func (m *NlEntity) String() string { return proto.CompactTextString(m) }
func (*NlEntity) ProtoMessage()    {}
func (*NlEntity) Descriptor() ([]byte, []int) {
	return fileDescriptor_78db526053ee6862, []int{3}
}

func (m *NlEntity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NlEntity.Unmarshal(m, b)
}
func (m *NlEntity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NlEntity.Marshal(b, m, deterministic)
}
func (m *NlEntity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NlEntity.Merge(m, src)
}
func (m *NlEntity) XXX_Size() int {
	return xxx_messageInfo_NlEntity.Size(m)
}
func (m *NlEntity) XXX_DiscardUnknown() {
	xxx_messageInfo_NlEntity.DiscardUnknown(m)
}

var xxx_messageInfo_NlEntity proto.InternalMessageInfo

func (m *NlEntity) GetEntity() string {
	if m != nil {
		return m.Entity
	}
	return ""
}

func (m *NlEntity) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *NlEntity) GetStart() int32 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *NlEntity) GetConfidence() float32 {
	if m != nil {
		return m.Confidence
	}
	return 0
}

func (m *NlEntity) GetEnd() int32 {
	if m != nil {
		return m.End
	}
	return 0
}

type NlEntities struct {
	Entities             []*NlEntity `protobuf:"bytes,1,rep,name=entities,proto3" json:"entities,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *NlEntities) Reset()         { *m = NlEntities{} }
func (m *NlEntities) String() string { return proto.CompactTextString(m) }
func (*NlEntities) ProtoMessage()    {}
func (*NlEntities) Descriptor() ([]byte, []int) {
	return fileDescriptor_78db526053ee6862, []int{4}
}

func (m *NlEntities) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NlEntities.Unmarshal(m, b)
}
func (m *NlEntities) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NlEntities.Marshal(b, m, deterministic)
}
func (m *NlEntities) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NlEntities.Merge(m, src)
}
func (m *NlEntities) XXX_Size() int {
	return xxx_messageInfo_NlEntities.Size(m)
}
func (m *NlEntities) XXX_DiscardUnknown() {
	xxx_messageInfo_NlEntities.DiscardUnknown(m)
}

var xxx_messageInfo_NlEntities proto.InternalMessageInfo

func (m *NlEntities) GetEntities() []*NlEntity {
	if m != nil {
		return m.Entities
	}
	return nil
}

type NlAmount struct {
	Entity               *NlEntity `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
	NumericVal           string    `protobuf:"bytes,2,opt,name=numericVal,proto3" json:"numericVal,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *NlAmount) Reset()         { *m = NlAmount{} }
func (m *NlAmount) String() string { return proto.CompactTextString(m) }
func (*NlAmount) ProtoMessage()    {}
func (*NlAmount) Descriptor() ([]byte, []int) {
	return fileDescriptor_78db526053ee6862, []int{5}
}

func (m *NlAmount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NlAmount.Unmarshal(m, b)
}
func (m *NlAmount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NlAmount.Marshal(b, m, deterministic)
}
func (m *NlAmount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NlAmount.Merge(m, src)
}
func (m *NlAmount) XXX_Size() int {
	return xxx_messageInfo_NlAmount.Size(m)
}
func (m *NlAmount) XXX_DiscardUnknown() {
	xxx_messageInfo_NlAmount.DiscardUnknown(m)
}

var xxx_messageInfo_NlAmount proto.InternalMessageInfo

func (m *NlAmount) GetEntity() *NlEntity {
	if m != nil {
		return m.Entity
	}
	return nil
}

func (m *NlAmount) GetNumericVal() string {
	if m != nil {
		return m.NumericVal
	}
	return ""
}

type NlAmountList struct {
	Amount               []*NlAmount `protobuf:"bytes,1,rep,name=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *NlAmountList) Reset()         { *m = NlAmountList{} }
func (m *NlAmountList) String() string { return proto.CompactTextString(m) }
func (*NlAmountList) ProtoMessage()    {}
func (*NlAmountList) Descriptor() ([]byte, []int) {
	return fileDescriptor_78db526053ee6862, []int{6}
}

func (m *NlAmountList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NlAmountList.Unmarshal(m, b)
}
func (m *NlAmountList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NlAmountList.Marshal(b, m, deterministic)
}
func (m *NlAmountList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NlAmountList.Merge(m, src)
}
func (m *NlAmountList) XXX_Size() int {
	return xxx_messageInfo_NlAmountList.Size(m)
}
func (m *NlAmountList) XXX_DiscardUnknown() {
	xxx_messageInfo_NlAmountList.DiscardUnknown(m)
}

var xxx_messageInfo_NlAmountList proto.InternalMessageInfo

func (m *NlAmountList) GetAmount() []*NlAmount {
	if m != nil {
		return m.Amount
	}
	return nil
}

type NlTokenizerRequest struct {
	Text                 *NlText             `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	Options              *NlTokenizerOptions `protobuf:"bytes,2,opt,name=options,proto3" json:"options,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *NlTokenizerRequest) Reset()         { *m = NlTokenizerRequest{} }
func (m *NlTokenizerRequest) String() string { return proto.CompactTextString(m) }
func (*NlTokenizerRequest) ProtoMessage()    {}
func (*NlTokenizerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_78db526053ee6862, []int{7}
}

func (m *NlTokenizerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NlTokenizerRequest.Unmarshal(m, b)
}
func (m *NlTokenizerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NlTokenizerRequest.Marshal(b, m, deterministic)
}
func (m *NlTokenizerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NlTokenizerRequest.Merge(m, src)
}
func (m *NlTokenizerRequest) XXX_Size() int {
	return xxx_messageInfo_NlTokenizerRequest.Size(m)
}
func (m *NlTokenizerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NlTokenizerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NlTokenizerRequest proto.InternalMessageInfo

func (m *NlTokenizerRequest) GetText() *NlText {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *NlTokenizerRequest) GetOptions() *NlTokenizerOptions {
	if m != nil {
		return m.Options
	}
	return nil
}

type NlToken struct {
	Text                 string   `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	Length               int32    `protobuf:"varint,2,opt,name=length,proto3" json:"length,omitempty"`
	Label                string   `protobuf:"bytes,3,opt,name=label,proto3" json:"label,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NlToken) Reset()         { *m = NlToken{} }
func (m *NlToken) String() string { return proto.CompactTextString(m) }
func (*NlToken) ProtoMessage()    {}
func (*NlToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_78db526053ee6862, []int{8}
}

func (m *NlToken) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NlToken.Unmarshal(m, b)
}
func (m *NlToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NlToken.Marshal(b, m, deterministic)
}
func (m *NlToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NlToken.Merge(m, src)
}
func (m *NlToken) XXX_Size() int {
	return xxx_messageInfo_NlToken.Size(m)
}
func (m *NlToken) XXX_DiscardUnknown() {
	xxx_messageInfo_NlToken.DiscardUnknown(m)
}

var xxx_messageInfo_NlToken proto.InternalMessageInfo

func (m *NlToken) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *NlToken) GetLength() int32 {
	if m != nil {
		return m.Length
	}
	return 0
}

func (m *NlToken) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

type NlTokens struct {
	Tokens               []*NlToken `protobuf:"bytes,1,rep,name=tokens,proto3" json:"tokens,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *NlTokens) Reset()         { *m = NlTokens{} }
func (m *NlTokens) String() string { return proto.CompactTextString(m) }
func (*NlTokens) ProtoMessage()    {}
func (*NlTokens) Descriptor() ([]byte, []int) {
	return fileDescriptor_78db526053ee6862, []int{9}
}

func (m *NlTokens) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NlTokens.Unmarshal(m, b)
}
func (m *NlTokens) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NlTokens.Marshal(b, m, deterministic)
}
func (m *NlTokens) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NlTokens.Merge(m, src)
}
func (m *NlTokens) XXX_Size() int {
	return xxx_messageInfo_NlTokens.Size(m)
}
func (m *NlTokens) XXX_DiscardUnknown() {
	xxx_messageInfo_NlTokens.DiscardUnknown(m)
}

var xxx_messageInfo_NlTokens proto.InternalMessageInfo

func (m *NlTokens) GetTokens() []*NlToken {
	if m != nil {
		return m.Tokens
	}
	return nil
}

type NlTokenizerOptions struct {
	JapaneseNameRecognize     bool     `protobuf:"varint,1,opt,name=japaneseNameRecognize,proto3" json:"japaneseNameRecognize,omitempty"`
	PlaceRecognize            bool     `protobuf:"varint,2,opt,name=placeRecognize,proto3" json:"placeRecognize,omitempty"`
	OrganizationRecognize     bool     `protobuf:"varint,3,opt,name=organizationRecognize,proto3" json:"organizationRecognize,omitempty"`
	NameRecognize             bool     `protobuf:"varint,4,opt,name=nameRecognize,proto3" json:"nameRecognize,omitempty"`
	TranslatedNameRecognize   bool     `protobuf:"varint,5,opt,name=translatedNameRecognize,proto3" json:"translatedNameRecognize,omitempty"`
	NumberQuantifierRecognize bool     `protobuf:"varint,6,opt,name=numberQuantifierRecognize,proto3" json:"numberQuantifierRecognize,omitempty"`
	AllNamedEntityRecognize   bool     `protobuf:"varint,7,opt,name=allNamedEntityRecognize,proto3" json:"allNamedEntityRecognize,omitempty"`
	XXX_NoUnkeyedLiteral      struct{} `json:"-"`
	XXX_unrecognized          []byte   `json:"-"`
	XXX_sizecache             int32    `json:"-"`
}

func (m *NlTokenizerOptions) Reset()         { *m = NlTokenizerOptions{} }
func (m *NlTokenizerOptions) String() string { return proto.CompactTextString(m) }
func (*NlTokenizerOptions) ProtoMessage()    {}
func (*NlTokenizerOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_78db526053ee6862, []int{10}
}

func (m *NlTokenizerOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NlTokenizerOptions.Unmarshal(m, b)
}
func (m *NlTokenizerOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NlTokenizerOptions.Marshal(b, m, deterministic)
}
func (m *NlTokenizerOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NlTokenizerOptions.Merge(m, src)
}
func (m *NlTokenizerOptions) XXX_Size() int {
	return xxx_messageInfo_NlTokenizerOptions.Size(m)
}
func (m *NlTokenizerOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_NlTokenizerOptions.DiscardUnknown(m)
}

var xxx_messageInfo_NlTokenizerOptions proto.InternalMessageInfo

func (m *NlTokenizerOptions) GetJapaneseNameRecognize() bool {
	if m != nil {
		return m.JapaneseNameRecognize
	}
	return false
}

func (m *NlTokenizerOptions) GetPlaceRecognize() bool {
	if m != nil {
		return m.PlaceRecognize
	}
	return false
}

func (m *NlTokenizerOptions) GetOrganizationRecognize() bool {
	if m != nil {
		return m.OrganizationRecognize
	}
	return false
}

func (m *NlTokenizerOptions) GetNameRecognize() bool {
	if m != nil {
		return m.NameRecognize
	}
	return false
}

func (m *NlTokenizerOptions) GetTranslatedNameRecognize() bool {
	if m != nil {
		return m.TranslatedNameRecognize
	}
	return false
}

func (m *NlTokenizerOptions) GetNumberQuantifierRecognize() bool {
	if m != nil {
		return m.NumberQuantifierRecognize
	}
	return false
}

func (m *NlTokenizerOptions) GetAllNamedEntityRecognize() bool {
	if m != nil {
		return m.AllNamedEntityRecognize
	}
	return false
}

type NlResult struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NlResult) Reset()         { *m = NlResult{} }
func (m *NlResult) String() string { return proto.CompactTextString(m) }
func (*NlResult) ProtoMessage()    {}
func (*NlResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_78db526053ee6862, []int{11}
}

func (m *NlResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NlResult.Unmarshal(m, b)
}
func (m *NlResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NlResult.Marshal(b, m, deterministic)
}
func (m *NlResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NlResult.Merge(m, src)
}
func (m *NlResult) XXX_Size() int {
	return xxx_messageInfo_NlResult.Size(m)
}
func (m *NlResult) XXX_DiscardUnknown() {
	xxx_messageInfo_NlResult.DiscardUnknown(m)
}

var xxx_messageInfo_NlResult proto.InternalMessageInfo

func (m *NlResult) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

type NlText struct {
	Text                 string   `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	Lang                 string   `protobuf:"bytes,2,opt,name=lang,proto3" json:"lang,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NlText) Reset()         { *m = NlText{} }
func (m *NlText) String() string { return proto.CompactTextString(m) }
func (*NlText) ProtoMessage()    {}
func (*NlText) Descriptor() ([]byte, []int) {
	return fileDescriptor_78db526053ee6862, []int{12}
}

func (m *NlText) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NlText.Unmarshal(m, b)
}
func (m *NlText) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NlText.Marshal(b, m, deterministic)
}
func (m *NlText) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NlText.Merge(m, src)
}
func (m *NlText) XXX_Size() int {
	return xxx_messageInfo_NlText.Size(m)
}
func (m *NlText) XXX_DiscardUnknown() {
	xxx_messageInfo_NlText.DiscardUnknown(m)
}

var xxx_messageInfo_NlText proto.InternalMessageInfo

func (m *NlText) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *NlText) GetLang() string {
	if m != nil {
		return m.Lang
	}
	return ""
}

type NlWord struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Lemma                string   `protobuf:"bytes,2,opt,name=lemma,proto3" json:"lemma,omitempty"`
	Postag1              string   `protobuf:"bytes,3,opt,name=postag1,proto3" json:"postag1,omitempty"`
	Postag2              string   `protobuf:"bytes,4,opt,name=postag2,proto3" json:"postag2,omitempty"`
	HeadId               int32    `protobuf:"varint,5,opt,name=head_id,json=headId,proto3" json:"head_id,omitempty"`
	Deprel               string   `protobuf:"bytes,6,opt,name=deprel,proto3" json:"deprel,omitempty"`
	Name                 string   `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NlWord) Reset()         { *m = NlWord{} }
func (m *NlWord) String() string { return proto.CompactTextString(m) }
func (*NlWord) ProtoMessage()    {}
func (*NlWord) Descriptor() ([]byte, []int) {
	return fileDescriptor_78db526053ee6862, []int{13}
}

func (m *NlWord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NlWord.Unmarshal(m, b)
}
func (m *NlWord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NlWord.Marshal(b, m, deterministic)
}
func (m *NlWord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NlWord.Merge(m, src)
}
func (m *NlWord) XXX_Size() int {
	return xxx_messageInfo_NlWord.Size(m)
}
func (m *NlWord) XXX_DiscardUnknown() {
	xxx_messageInfo_NlWord.DiscardUnknown(m)
}

var xxx_messageInfo_NlWord proto.InternalMessageInfo

func (m *NlWord) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *NlWord) GetLemma() string {
	if m != nil {
		return m.Lemma
	}
	return ""
}

func (m *NlWord) GetPostag1() string {
	if m != nil {
		return m.Postag1
	}
	return ""
}

func (m *NlWord) GetPostag2() string {
	if m != nil {
		return m.Postag2
	}
	return ""
}

func (m *NlWord) GetHeadId() int32 {
	if m != nil {
		return m.HeadId
	}
	return 0
}

func (m *NlWord) GetDeprel() string {
	if m != nil {
		return m.Deprel
	}
	return ""
}

func (m *NlWord) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type NlParseRequest struct {
	Text                 string   `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NlParseRequest) Reset()         { *m = NlParseRequest{} }
func (m *NlParseRequest) String() string { return proto.CompactTextString(m) }
func (*NlParseRequest) ProtoMessage()    {}
func (*NlParseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_78db526053ee6862, []int{14}
}

func (m *NlParseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NlParseRequest.Unmarshal(m, b)
}
func (m *NlParseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NlParseRequest.Marshal(b, m, deterministic)
}
func (m *NlParseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NlParseRequest.Merge(m, src)
}
func (m *NlParseRequest) XXX_Size() int {
	return xxx_messageInfo_NlParseRequest.Size(m)
}
func (m *NlParseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NlParseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NlParseRequest proto.InternalMessageInfo

func (m *NlParseRequest) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

type NlPinyinRequest struct {
	Text                 string                             `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	Presentation         NlPinyinRequest_PinyinPresentation `protobuf:"varint,2,opt,name=presentation,proto3,enum=nlpserv.NlPinyinRequest_PinyinPresentation" json:"presentation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *NlPinyinRequest) Reset()         { *m = NlPinyinRequest{} }
func (m *NlPinyinRequest) String() string { return proto.CompactTextString(m) }
func (*NlPinyinRequest) ProtoMessage()    {}
func (*NlPinyinRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_78db526053ee6862, []int{15}
}

func (m *NlPinyinRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NlPinyinRequest.Unmarshal(m, b)
}
func (m *NlPinyinRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NlPinyinRequest.Marshal(b, m, deterministic)
}
func (m *NlPinyinRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NlPinyinRequest.Merge(m, src)
}
func (m *NlPinyinRequest) XXX_Size() int {
	return xxx_messageInfo_NlPinyinRequest.Size(m)
}
func (m *NlPinyinRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NlPinyinRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NlPinyinRequest proto.InternalMessageInfo

func (m *NlPinyinRequest) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *NlPinyinRequest) GetPresentation() NlPinyinRequest_PinyinPresentation {
	if m != nil {
		return m.Presentation
	}
	return NlPinyinRequest_NUMBER
}

type NlSentence struct {
	Words                []*NlWord `protobuf:"bytes,1,rep,name=words,proto3" json:"words,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *NlSentence) Reset()         { *m = NlSentence{} }
func (m *NlSentence) String() string { return proto.CompactTextString(m) }
func (*NlSentence) ProtoMessage()    {}
func (*NlSentence) Descriptor() ([]byte, []int) {
	return fileDescriptor_78db526053ee6862, []int{16}
}

func (m *NlSentence) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NlSentence.Unmarshal(m, b)
}
func (m *NlSentence) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NlSentence.Marshal(b, m, deterministic)
}
func (m *NlSentence) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NlSentence.Merge(m, src)
}
func (m *NlSentence) XXX_Size() int {
	return xxx_messageInfo_NlSentence.Size(m)
}
func (m *NlSentence) XXX_DiscardUnknown() {
	xxx_messageInfo_NlSentence.DiscardUnknown(m)
}

var xxx_messageInfo_NlSentence proto.InternalMessageInfo

func (m *NlSentence) GetWords() []*NlWord {
	if m != nil {
		return m.Words
	}
	return nil
}

type NlSentences struct {
	Sentences            []*NlSentence `protobuf:"bytes,1,rep,name=sentences,proto3" json:"sentences,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *NlSentences) Reset()         { *m = NlSentences{} }
func (m *NlSentences) String() string { return proto.CompactTextString(m) }
func (*NlSentences) ProtoMessage()    {}
func (*NlSentences) Descriptor() ([]byte, []int) {
	return fileDescriptor_78db526053ee6862, []int{17}
}

func (m *NlSentences) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NlSentences.Unmarshal(m, b)
}
func (m *NlSentences) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NlSentences.Marshal(b, m, deterministic)
}
func (m *NlSentences) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NlSentences.Merge(m, src)
}
func (m *NlSentences) XXX_Size() int {
	return xxx_messageInfo_NlSentences.Size(m)
}
func (m *NlSentences) XXX_DiscardUnknown() {
	xxx_messageInfo_NlSentences.DiscardUnknown(m)
}

var xxx_messageInfo_NlSentences proto.InternalMessageInfo

func (m *NlSentences) GetSentences() []*NlSentence {
	if m != nil {
		return m.Sentences
	}
	return nil
}

type NlDocumentSimilarity struct {
	DocumentId           int32    `protobuf:"varint,1,opt,name=documentId,proto3" json:"documentId,omitempty"`
	Content              string   `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	Similarity           float32  `protobuf:"fixed32,3,opt,name=similarity,proto3" json:"similarity,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NlDocumentSimilarity) Reset()         { *m = NlDocumentSimilarity{} }
func (m *NlDocumentSimilarity) String() string { return proto.CompactTextString(m) }
func (*NlDocumentSimilarity) ProtoMessage()    {}
func (*NlDocumentSimilarity) Descriptor() ([]byte, []int) {
	return fileDescriptor_78db526053ee6862, []int{18}
}

func (m *NlDocumentSimilarity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NlDocumentSimilarity.Unmarshal(m, b)
}
func (m *NlDocumentSimilarity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NlDocumentSimilarity.Marshal(b, m, deterministic)
}
func (m *NlDocumentSimilarity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NlDocumentSimilarity.Merge(m, src)
}
func (m *NlDocumentSimilarity) XXX_Size() int {
	return xxx_messageInfo_NlDocumentSimilarity.Size(m)
}
func (m *NlDocumentSimilarity) XXX_DiscardUnknown() {
	xxx_messageInfo_NlDocumentSimilarity.DiscardUnknown(m)
}

var xxx_messageInfo_NlDocumentSimilarity proto.InternalMessageInfo

func (m *NlDocumentSimilarity) GetDocumentId() int32 {
	if m != nil {
		return m.DocumentId
	}
	return 0
}

func (m *NlDocumentSimilarity) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *NlDocumentSimilarity) GetSimilarity() float32 {
	if m != nil {
		return m.Similarity
	}
	return 0
}

type NlDocumentSimilaritySet struct {
	Docs                 []*NlDocumentSimilarity `protobuf:"bytes,1,rep,name=docs,proto3" json:"docs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *NlDocumentSimilaritySet) Reset()         { *m = NlDocumentSimilaritySet{} }
func (m *NlDocumentSimilaritySet) String() string { return proto.CompactTextString(m) }
func (*NlDocumentSimilaritySet) ProtoMessage()    {}
func (*NlDocumentSimilaritySet) Descriptor() ([]byte, []int) {
	return fileDescriptor_78db526053ee6862, []int{19}
}

func (m *NlDocumentSimilaritySet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NlDocumentSimilaritySet.Unmarshal(m, b)
}
func (m *NlDocumentSimilaritySet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NlDocumentSimilaritySet.Marshal(b, m, deterministic)
}
func (m *NlDocumentSimilaritySet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NlDocumentSimilaritySet.Merge(m, src)
}
func (m *NlDocumentSimilaritySet) XXX_Size() int {
	return xxx_messageInfo_NlDocumentSimilaritySet.Size(m)
}
func (m *NlDocumentSimilaritySet) XXX_DiscardUnknown() {
	xxx_messageInfo_NlDocumentSimilaritySet.DiscardUnknown(m)
}

var xxx_messageInfo_NlDocumentSimilaritySet proto.InternalMessageInfo

func (m *NlDocumentSimilaritySet) GetDocs() []*NlDocumentSimilarity {
	if m != nil {
		return m.Docs
	}
	return nil
}

type NlDocumentSet struct {
	TextList             []string `protobuf:"bytes,1,rep,name=textList,proto3" json:"textList,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NlDocumentSet) Reset()         { *m = NlDocumentSet{} }
func (m *NlDocumentSet) String() string { return proto.CompactTextString(m) }
func (*NlDocumentSet) ProtoMessage()    {}
func (*NlDocumentSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_78db526053ee6862, []int{20}
}

func (m *NlDocumentSet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NlDocumentSet.Unmarshal(m, b)
}
func (m *NlDocumentSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NlDocumentSet.Marshal(b, m, deterministic)
}
func (m *NlDocumentSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NlDocumentSet.Merge(m, src)
}
func (m *NlDocumentSet) XXX_Size() int {
	return xxx_messageInfo_NlDocumentSet.Size(m)
}
func (m *NlDocumentSet) XXX_DiscardUnknown() {
	xxx_messageInfo_NlDocumentSet.DiscardUnknown(m)
}

var xxx_messageInfo_NlDocumentSet proto.InternalMessageInfo

func (m *NlDocumentSet) GetTextList() []string {
	if m != nil {
		return m.TextList
	}
	return nil
}

func init() {
	proto.RegisterEnum("nlpserv.NlPinyinRequest_PinyinPresentation", NlPinyinRequest_PinyinPresentation_name, NlPinyinRequest_PinyinPresentation_value)
	proto.RegisterType((*NlCabochaToken)(nil), "nlpserv.NlCabochaToken")
	proto.RegisterType((*NlCabochaChunk)(nil), "nlpserv.NlCabochaChunk")
	proto.RegisterType((*NlCabochaChunks)(nil), "nlpserv.NlCabochaChunks")
	proto.RegisterType((*NlEntity)(nil), "nlpserv.NlEntity")
	proto.RegisterType((*NlEntities)(nil), "nlpserv.NlEntities")
	proto.RegisterType((*NlAmount)(nil), "nlpserv.NlAmount")
	proto.RegisterType((*NlAmountList)(nil), "nlpserv.NlAmountList")
	proto.RegisterType((*NlTokenizerRequest)(nil), "nlpserv.NlTokenizerRequest")
	proto.RegisterType((*NlToken)(nil), "nlpserv.NlToken")
	proto.RegisterType((*NlTokens)(nil), "nlpserv.NlTokens")
	proto.RegisterType((*NlTokenizerOptions)(nil), "nlpserv.NlTokenizerOptions")
	proto.RegisterType((*NlResult)(nil), "nlpserv.NlResult")
	proto.RegisterType((*NlText)(nil), "nlpserv.NlText")
	proto.RegisterType((*NlWord)(nil), "nlpserv.NlWord")
	proto.RegisterType((*NlParseRequest)(nil), "nlpserv.NlParseRequest")
	proto.RegisterType((*NlPinyinRequest)(nil), "nlpserv.NlPinyinRequest")
	proto.RegisterType((*NlSentence)(nil), "nlpserv.NlSentence")
	proto.RegisterType((*NlSentences)(nil), "nlpserv.NlSentences")
	proto.RegisterType((*NlDocumentSimilarity)(nil), "nlpserv.NlDocumentSimilarity")
	proto.RegisterType((*NlDocumentSimilaritySet)(nil), "nlpserv.NlDocumentSimilaritySet")
	proto.RegisterType((*NlDocumentSet)(nil), "nlpserv.NlDocumentSet")
}

func init() { proto.RegisterFile("nlpserv.proto", fileDescriptor_78db526053ee6862) }

var fileDescriptor_78db526053ee6862 = []byte{
	// 1381 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x57, 0xcd, 0x72, 0xdb, 0x46,
	0x12, 0xe6, 0xbf, 0xc8, 0x16, 0xf5, 0xe3, 0x91, 0x6d, 0xc1, 0x72, 0xad, 0x4b, 0x8b, 0xf5, 0xee,
	0xca, 0xeb, 0xb2, 0xd6, 0xa2, 0xbc, 0x55, 0xde, 0xb2, 0x53, 0x15, 0xc9, 0x56, 0x1c, 0xc5, 0x32,
	0xc5, 0x40, 0x72, 0x7c, 0x64, 0x8d, 0x80, 0x26, 0x85, 0x08, 0x98, 0x41, 0x30, 0x43, 0x45, 0xf2,
	0xc9, 0xa7, 0x3c, 0x48, 0x2e, 0x79, 0x8b, 0x3c, 0x4b, 0xee, 0x79, 0x89, 0x54, 0x0f, 0x06, 0x24,
	0x28, 0x51, 0xce, 0x29, 0xb7, 0xe9, 0xee, 0x6f, 0x7a, 0xfa, 0xe7, 0x63, 0x37, 0x08, 0x0b, 0x22,
	0x4a, 0x14, 0xa6, 0xe7, 0x9b, 0x49, 0x2a, 0xb5, 0x64, 0x73, 0x56, 0x5c, 0x63, 0xbe, 0x8c, 0x63,
	0x29, 0xfa, 0xfa, 0x32, 0x41, 0x95, 0x19, 0xdd, 0xdf, 0x2b, 0xb0, 0xd8, 0x8d, 0x5e, 0xf1, 0x13,
	0xe9, 0x9f, 0xf2, 0x63, 0x79, 0x86, 0x82, 0x2d, 0x42, 0x25, 0x0c, 0x9c, 0xf2, 0x7a, 0x79, 0xa3,
	0xee, 0x55, 0xc2, 0x80, 0xfd, 0x1b, 0x96, 0x78, 0x10, 0x84, 0x3a, 0x94, 0x82, 0x47, 0xfd, 0x50,
	0x0c, 0xa4, 0x53, 0x59, 0x2f, 0x6f, 0xb4, 0xbc, 0xc5, 0x89, 0x7a, 0x5f, 0x0c, 0x24, 0xfb, 0x3b,
	0xb4, 0x07, 0xc8, 0xf5, 0x28, 0xc5, 0x7e, 0x14, 0x2a, 0xed, 0x54, 0xd7, 0xab, 0x1b, 0x2d, 0x6f,
	0xde, 0xea, 0x0e, 0x42, 0xa5, 0xc9, 0xb7, 0x40, 0xa7, 0x66, 0xae, 0x57, 0x04, 0xb2, 0x27, 0xc0,
	0x84, 0x4c, 0x63, 0x1e, 0x85, 0x1f, 0x31, 0xe8, 0xab, 0x51, 0x3a, 0xe0, 0x3e, 0x3a, 0x75, 0x63,
	0xbf, 0x35, 0xb1, 0x1c, 0x65, 0x06, 0xe6, 0xc0, 0x5c, 0x8e, 0x69, 0x18, 0x4c, 0x2e, 0xb2, 0x65,
	0xa8, 0x26, 0x52, 0x39, 0x73, 0x46, 0x4b, 0x47, 0xc6, 0xa0, 0x96, 0x48, 0xb5, 0xe5, 0x34, 0x8d,
	0xca, 0x9c, 0xad, 0xae, 0xe3, 0xb4, 0xc6, 0xba, 0x8e, 0xd5, 0x6d, 0x3b, 0x30, 0xd6, 0x6d, 0xb3,
	0xdb, 0x50, 0xf7, 0xa9, 0x4a, 0xce, 0xbc, 0x51, 0x66, 0x82, 0xd1, 0x0e, 0x64, 0x1a, 0x3b, 0x6d,
	0xab, 0x25, 0x81, 0xdd, 0x85, 0xc6, 0x10, 0xc5, 0x19, 0x86, 0xce, 0x82, 0x51, 0x5b, 0x89, 0xfc,
	0x5e, 0xca, 0x38, 0x74, 0x16, 0x33, 0xbf, 0x74, 0x76, 0x7f, 0x2b, 0x56, 0xfb, 0xd5, 0xe9, 0x48,
	0x9c, 0xfd, 0xa5, 0xd5, 0xbe, 0x07, 0xcd, 0xc1, 0x48, 0xf8, 0x7d, 0xaa, 0x4c, 0xcd, 0xbc, 0x30,
	0x47, 0x72, 0x4f, 0x2a, 0x32, 0x9d, 0x22, 0x0f, 0x8c, 0xa9, 0x9e, 0x99, 0x48, 0xee, 0x65, 0x85,
	0x8b, 0x42, 0x71, 0x66, 0x2a, 0x5c, 0xf7, 0xcc, 0x99, 0x52, 0x57, 0xbe, 0x4c, 0xd1, 0x14, 0xb8,
	0xe2, 0x65, 0x02, 0xbb, 0x0f, 0x2d, 0x4d, 0x94, 0x31, 0x5e, 0x9a, 0x06, 0xde, 0x34, 0x0a, 0x72,
	0xb3, 0x0e, 0x6d, 0x81, 0x17, 0xba, 0x4f, 0xf7, 0xfb, 0x61, 0x60, 0x6a, 0x5e, 0xf7, 0x80, 0x74,
	0x07, 0xa1, 0x38, 0xdb, 0x0f, 0x98, 0x0b, 0x0b, 0x49, 0x8a, 0xe7, 0x39, 0x42, 0x39, 0xb0, 0x5e,
	0xdd, 0xa8, 0x7b, 0xf3, 0xa4, 0xcc, 0x20, 0x8a, 0xfd, 0x17, 0x1a, 0xc6, 0xa3, 0x72, 0xe6, 0xd7,
	0xab, 0x1b, 0xf3, 0x9d, 0xd5, 0xcd, 0x9c, 0xdc, 0xd3, 0xac, 0xf5, 0x2c, 0xcc, 0xdd, 0x85, 0xa5,
	0xe9, 0x0a, 0x1b, 0x1f, 0xbe, 0x39, 0x39, 0xe5, 0x9b, 0x7c, 0x18, 0xa4, 0x67, 0x61, 0xee, 0xa7,
	0x32, 0x34, 0xbb, 0xd1, 0x9e, 0xd0, 0xa1, 0xbe, 0xa4, 0xfe, 0xa2, 0x39, 0x99, 0x26, 0xb5, 0x3c,
	0x2b, 0x51, 0x49, 0xce, 0x79, 0x34, 0x42, 0xdb, 0x9e, 0x4c, 0x30, 0x85, 0xd2, 0x3c, 0xa5, 0x76,
	0x50, 0xba, 0x99, 0xc0, 0x1e, 0x00, 0xf8, 0x52, 0x0c, 0xc2, 0x00, 0x85, 0x9f, 0xd1, 0xbf, 0xe2,
	0x15, 0x34, 0xc4, 0x5e, 0x14, 0x81, 0x6d, 0x04, 0x1d, 0xdd, 0x17, 0x00, 0x36, 0x82, 0x10, 0x15,
	0x7b, 0x02, 0x4d, 0xb4, 0x67, 0x9b, 0xc3, 0xad, 0x42, 0x0e, 0x59, 0xa0, 0xde, 0x18, 0xe2, 0xbe,
	0xa7, 0xf0, 0x77, 0x62, 0x39, 0x12, 0x9a, 0x3d, 0x9a, 0x0a, 0x7f, 0xe6, 0xc5, 0x3c, 0xa3, 0x07,
	0x00, 0x62, 0x14, 0x63, 0x1a, 0xfa, 0xdf, 0xf1, 0xc8, 0xa6, 0x55, 0xd0, 0xb8, 0xff, 0x87, 0x76,
	0xee, 0xd6, 0xd0, 0xeb, 0x11, 0x34, 0xb8, 0x91, 0x66, 0xc4, 0x94, 0xc1, 0x3c, 0x0b, 0x70, 0x13,
	0x60, 0xdd, 0xc8, 0x34, 0x2a, 0xfc, 0x88, 0xa9, 0x87, 0x3f, 0x8c, 0x50, 0x69, 0xf6, 0x0f, 0xa8,
	0x69, 0xbc, 0xd0, 0x36, 0xb2, 0xa5, 0xc2, 0xf5, 0x63, 0xbc, 0xd0, 0x9e, 0x31, 0xb2, 0xff, 0xc1,
	0x9c, 0x4c, 0x88, 0xf7, 0xca, 0x84, 0x34, 0xdf, 0xb9, 0x5f, 0xc4, 0xe5, 0x2e, 0x0f, 0x33, 0x88,
	0x97, 0x63, 0xdd, 0xb7, 0x30, 0x67, 0xcd, 0x44, 0xe8, 0xf1, 0x33, 0x2d, 0xeb, 0xf5, 0x2e, 0x34,
	0x22, 0x14, 0x43, 0x7d, 0x6a, 0x9c, 0xd6, 0x3d, 0x2b, 0x51, 0xff, 0x22, 0x7e, 0x82, 0x91, 0xe9,
	0x5f, 0xcb, 0xcb, 0x04, 0xf7, 0x19, 0x15, 0xd4, 0x38, 0x53, 0x6c, 0x63, 0xcc, 0xc8, 0x2c, 0xeb,
	0xe5, 0xab, 0xe1, 0x8c, 0xa9, 0xf8, 0xa9, 0x3a, 0x95, 0xb5, 0x0d, 0x91, 0x3d, 0x83, 0x3b, 0xdf,
	0xf3, 0x84, 0x0b, 0x54, 0xd8, 0xe5, 0x31, 0x7a, 0xe8, 0xcb, 0x21, 0x01, 0x4c, 0x7c, 0x4d, 0x6f,
	0xb6, 0x91, 0xfd, 0x0b, 0x16, 0x93, 0x88, 0xfb, 0x05, 0x78, 0xc5, 0xc0, 0xaf, 0x68, 0xc9, 0xbb,
	0x4c, 0x87, 0x5c, 0x84, 0x1f, 0x39, 0x3d, 0x37, 0x81, 0x57, 0x33, 0xef, 0x33, 0x8d, 0xec, 0x21,
	0x2c, 0x88, 0xa9, 0x58, 0x6a, 0x06, 0x3d, 0xad, 0x64, 0xcf, 0x61, 0x55, 0xa7, 0x5c, 0xa8, 0x88,
	0x6b, 0x0c, 0xa6, 0x63, 0xaf, 0x1b, 0xfc, 0x4d, 0x66, 0xf6, 0x12, 0xee, 0x89, 0x51, 0x7c, 0x82,
	0xe9, 0xb7, 0x23, 0x2e, 0x74, 0x38, 0x08, 0x89, 0x04, 0xf9, 0xdd, 0x86, 0xb9, 0x7b, 0x33, 0x80,
	0xde, 0xe5, 0x51, 0x44, 0x1e, 0x03, 0x4b, 0xd9, 0xf1, 0xdd, 0xb9, 0xec, 0xdd, 0x1b, 0xcc, 0xee,
	0x03, 0x6a, 0x9c, 0x87, 0x6a, 0x14, 0x69, 0xa2, 0x81, 0x2f, 0x03, 0xb4, 0xb3, 0xd6, 0x9c, 0xdd,
	0xa7, 0xd0, 0xc8, 0xc8, 0x36, 0x93, 0x24, 0x34, 0x09, 0xb9, 0x18, 0xda, 0x9f, 0x82, 0x39, 0xbb,
	0xbf, 0x94, 0xe9, 0xca, 0x07, 0x99, 0x06, 0xd7, 0x46, 0x37, 0x71, 0x07, 0xe3, 0x98, 0xe7, 0x13,
	0xc1, 0x08, 0xb4, 0xb3, 0x12, 0xa9, 0x34, 0x1f, 0x6e, 0x59, 0x4e, 0xe5, 0xe2, 0xc4, 0xd2, 0xb1,
	0x1b, 0x31, 0x17, 0xd9, 0x2a, 0x98, 0x69, 0x4c, 0x63, 0x33, 0x9b, 0x09, 0x0d, 0x12, 0xf7, 0x03,
	0xa2, 0x6d, 0x80, 0x49, 0x8a, 0x91, 0xdd, 0x7f, 0x56, 0xa2, 0x48, 0xa9, 0x55, 0x76, 0xff, 0x99,
	0xb3, 0xfb, 0x90, 0x76, 0x4d, 0x8f, 0xa7, 0x0a, 0xf3, 0xdf, 0xdb, 0x8c, 0x1c, 0xdd, 0x5f, 0xcb,
	0x34, 0x30, 0x7b, 0xa1, 0xb8, 0x0c, 0xc5, 0x67, 0x70, 0xec, 0x10, 0xda, 0x49, 0x8a, 0x0a, 0x85,
	0x36, 0xd4, 0x31, 0x39, 0x2e, 0x76, 0x1e, 0x17, 0xc8, 0x3f, 0xe5, 0x63, 0x33, 0x93, 0x7a, 0x85,
	0x2b, 0xde, 0x94, 0x03, 0xf7, 0x2b, 0x60, 0xd7, 0x31, 0x0c, 0xa0, 0xd1, 0x7d, 0xff, 0x6e, 0x77,
	0xcf, 0x5b, 0x2e, 0x31, 0x06, 0x8b, 0x1f, 0xf6, 0x8f, 0xbf, 0xee, 0x1f, 0x1f, 0x76, 0xf7, 0xfa,
	0xef, 0x76, 0xbc, 0xb7, 0xcb, 0x65, 0xb6, 0x0c, 0x6d, 0xd2, 0x1d, 0xbe, 0x3f, 0x36, 0xea, 0xe5,
	0x8a, 0xbb, 0x4d, 0x93, 0xf2, 0x08, 0x85, 0x36, 0x93, 0xf4, 0x9f, 0x50, 0xff, 0x51, 0xa6, 0x41,
	0xfe, 0xe3, 0x2c, 0xce, 0x14, 0xea, 0x99, 0x97, 0x59, 0xdd, 0x2f, 0x61, 0x7e, 0x72, 0x49, 0xb1,
	0x2d, 0x68, 0xa9, 0x5c, 0xb0, 0x37, 0x57, 0x0a, 0x37, 0x73, 0xa0, 0x37, 0x41, 0xb9, 0x09, 0xdc,
	0xee, 0x46, 0xaf, 0xa5, 0x3f, 0x8a, 0x51, 0xe8, 0xa3, 0x30, 0x0e, 0x23, 0x9e, 0xda, 0x21, 0x1a,
	0x58, 0xed, 0x7e, 0x4e, 0x8e, 0x82, 0x86, 0x9a, 0xee, 0x4b, 0x72, 0xa2, 0x2d, 0x4d, 0x72, 0x91,
	0x6e, 0xaa, 0xb1, 0x1f, 0xc3, 0x95, 0x8a, 0x57, 0xd0, 0xb8, 0x07, 0xb0, 0x3a, 0xeb, 0xc5, 0x23,
	0xd4, 0x6c, 0x0b, 0x6a, 0x81, 0xf4, 0xf3, 0xd0, 0xff, 0x56, 0x08, 0xfd, 0x3a, 0xde, 0x33, 0x50,
	0xf7, 0x31, 0x2c, 0x14, 0xac, 0xa8, 0xd9, 0x1a, 0x34, 0xb5, 0xd9, 0xcd, 0x2a, 0x9b, 0xe7, 0x2d,
	0x6f, 0x2c, 0x77, 0x7e, 0xaa, 0xd1, 0xef, 0x28, 0xe9, 0xa5, 0xd2, 0x57, 0xec, 0x29, 0xd4, 0x7a,
	0xa1, 0x18, 0xb2, 0x95, 0xcd, 0xec, 0x7b, 0x92, 0x5a, 0x3d, 0xb4, 0x6d, 0x5f, 0xbb, 0x35, 0xad,
	0x4c, 0xa2, 0x4b, 0xb7, 0xc4, 0x76, 0x60, 0xc9, 0xf0, 0xf0, 0x35, 0x26, 0x28, 0x68, 0xe3, 0x5d,
	0xb2, 0xe2, 0x0e, 0x2e, 0x72, 0x74, 0x6d, 0x56, 0xdd, 0xdd, 0x12, 0x7b, 0x0e, 0xad, 0x37, 0xa8,
	0x33, 0xc2, 0x30, 0xe7, 0x26, 0xd6, 0xad, 0x5d, 0xdd, 0x21, 0x6e, 0x89, 0xbd, 0x80, 0xf6, 0x4e,
	0x10, 0xe4, 0x99, 0x2a, 0x76, 0x77, 0x56, 0x75, 0x90, 0x22, 0x9f, 0xe8, 0xb3, 0x89, 0xe1, 0x96,
	0xd8, 0x37, 0xb0, 0xf2, 0x06, 0x75, 0x17, 0x79, 0x8a, 0x4a, 0x4f, 0x7c, 0x5c, 0x7d, 0x66, 0x6d,
	0xfd, 0xb3, 0x25, 0x3f, 0x42, 0xf2, 0xf5, 0x05, 0xb4, 0xc6, 0xbb, 0x80, 0xcd, 0x5c, 0x62, 0x93,
	0x22, 0x5e, 0x31, 0x2a, 0xb7, 0xc4, 0xf6, 0x60, 0x29, 0x9b, 0x6e, 0x7b, 0x17, 0x3a, 0xe5, 0xbe,
	0x96, 0x7f, 0xe2, 0x64, 0xe5, 0xea, 0xa2, 0xa7, 0x2f, 0x83, 0x12, 0x7b, 0x09, 0xcb, 0xa6, 0xde,
	0xd9, 0x82, 0x3e, 0xc6, 0x34, 0x9e, 0x91, 0xce, 0x9d, 0x6b, 0x9b, 0x9c, 0x68, 0xe0, 0x96, 0x3a,
	0x6f, 0x61, 0xc9, 0x7e, 0x31, 0x8d, 0xe9, 0xf0, 0xbc, 0x98, 0xd6, 0x35, 0x4f, 0xce, 0x0d, 0xdf,
	0x5a, 0xca, 0x2d, 0xed, 0xfe, 0x07, 0xe8, 0x1f, 0xc9, 0xa6, 0xe2, 0x71, 0x84, 0x3a, 0xc7, 0xed,
	0xb6, 0xbb, 0x51, 0x72, 0x84, 0xe9, 0x79, 0x8f, 0xfe, 0x9f, 0xf4, 0xca, 0x3f, 0x57, 0xaa, 0xdd,
	0x83, 0xde, 0x49, 0xc3, 0xfc, 0x5d, 0xd9, 0xfe, 0x23, 0x00, 0x00, 0xff, 0xff, 0xa3, 0x67, 0xae,
	0x13, 0xdc, 0x0c, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// NlpProcsClient is the client API for NlpProcs service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NlpProcsClient interface {
	// Sends a greeting
	Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingReply, error)
	ParseDependency(ctx context.Context, in *NlParseRequest, opts ...grpc.CallOption) (*NlSentence, error)
	GetPinyin(ctx context.Context, in *NlPinyinRequest, opts ...grpc.CallOption) (*NlText, error)
	AddDocuments(ctx context.Context, in *NlDocumentSet, opts ...grpc.CallOption) (*NlResult, error)
	GetNearestDocuments(ctx context.Context, in *NlText, opts ...grpc.CallOption) (*NlDocumentSimilaritySet, error)
	Tokenizer(ctx context.Context, in *NlTokenizerRequest, opts ...grpc.CallOption) (*NlTokens, error)
	EntityExtractor(ctx context.Context, in *NlTokenizerRequest, opts ...grpc.CallOption) (*NlEntities, error)
	ParseAmountTerms(ctx context.Context, in *NlText, opts ...grpc.CallOption) (*NlAmountList, error)
}

type nlpProcsClient struct {
	cc *grpc.ClientConn
}

func NewNlpProcsClient(cc *grpc.ClientConn) NlpProcsClient {
	return &nlpProcsClient{cc}
}

func (c *nlpProcsClient) Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingReply, error) {
	out := new(PingReply)
	err := c.cc.Invoke(ctx, "/nlpserv.NlpProcs/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nlpProcsClient) ParseDependency(ctx context.Context, in *NlParseRequest, opts ...grpc.CallOption) (*NlSentence, error) {
	out := new(NlSentence)
	err := c.cc.Invoke(ctx, "/nlpserv.NlpProcs/ParseDependency", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nlpProcsClient) GetPinyin(ctx context.Context, in *NlPinyinRequest, opts ...grpc.CallOption) (*NlText, error) {
	out := new(NlText)
	err := c.cc.Invoke(ctx, "/nlpserv.NlpProcs/GetPinyin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nlpProcsClient) AddDocuments(ctx context.Context, in *NlDocumentSet, opts ...grpc.CallOption) (*NlResult, error) {
	out := new(NlResult)
	err := c.cc.Invoke(ctx, "/nlpserv.NlpProcs/AddDocuments", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nlpProcsClient) GetNearestDocuments(ctx context.Context, in *NlText, opts ...grpc.CallOption) (*NlDocumentSimilaritySet, error) {
	out := new(NlDocumentSimilaritySet)
	err := c.cc.Invoke(ctx, "/nlpserv.NlpProcs/GetNearestDocuments", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nlpProcsClient) Tokenizer(ctx context.Context, in *NlTokenizerRequest, opts ...grpc.CallOption) (*NlTokens, error) {
	out := new(NlTokens)
	err := c.cc.Invoke(ctx, "/nlpserv.NlpProcs/Tokenizer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nlpProcsClient) EntityExtractor(ctx context.Context, in *NlTokenizerRequest, opts ...grpc.CallOption) (*NlEntities, error) {
	out := new(NlEntities)
	err := c.cc.Invoke(ctx, "/nlpserv.NlpProcs/EntityExtractor", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nlpProcsClient) ParseAmountTerms(ctx context.Context, in *NlText, opts ...grpc.CallOption) (*NlAmountList, error) {
	out := new(NlAmountList)
	err := c.cc.Invoke(ctx, "/nlpserv.NlpProcs/ParseAmountTerms", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NlpProcsServer is the server API for NlpProcs service.
type NlpProcsServer interface {
	// Sends a greeting
	Ping(context.Context, *PingRequest) (*PingReply, error)
	ParseDependency(context.Context, *NlParseRequest) (*NlSentence, error)
	GetPinyin(context.Context, *NlPinyinRequest) (*NlText, error)
	AddDocuments(context.Context, *NlDocumentSet) (*NlResult, error)
	GetNearestDocuments(context.Context, *NlText) (*NlDocumentSimilaritySet, error)
	Tokenizer(context.Context, *NlTokenizerRequest) (*NlTokens, error)
	EntityExtractor(context.Context, *NlTokenizerRequest) (*NlEntities, error)
	ParseAmountTerms(context.Context, *NlText) (*NlAmountList, error)
}

func RegisterNlpProcsServer(s *grpc.Server, srv NlpProcsServer) {
	s.RegisterService(&_NlpProcs_serviceDesc, srv)
}

func _NlpProcs_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NlpProcsServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nlpserv.NlpProcs/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NlpProcsServer).Ping(ctx, req.(*PingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NlpProcs_ParseDependency_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NlParseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NlpProcsServer).ParseDependency(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nlpserv.NlpProcs/ParseDependency",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NlpProcsServer).ParseDependency(ctx, req.(*NlParseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NlpProcs_GetPinyin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NlPinyinRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NlpProcsServer).GetPinyin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nlpserv.NlpProcs/GetPinyin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NlpProcsServer).GetPinyin(ctx, req.(*NlPinyinRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NlpProcs_AddDocuments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NlDocumentSet)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NlpProcsServer).AddDocuments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nlpserv.NlpProcs/AddDocuments",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NlpProcsServer).AddDocuments(ctx, req.(*NlDocumentSet))
	}
	return interceptor(ctx, in, info, handler)
}

func _NlpProcs_GetNearestDocuments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NlText)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NlpProcsServer).GetNearestDocuments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nlpserv.NlpProcs/GetNearestDocuments",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NlpProcsServer).GetNearestDocuments(ctx, req.(*NlText))
	}
	return interceptor(ctx, in, info, handler)
}

func _NlpProcs_Tokenizer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NlTokenizerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NlpProcsServer).Tokenizer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nlpserv.NlpProcs/Tokenizer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NlpProcsServer).Tokenizer(ctx, req.(*NlTokenizerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NlpProcs_EntityExtractor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NlTokenizerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NlpProcsServer).EntityExtractor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nlpserv.NlpProcs/EntityExtractor",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NlpProcsServer).EntityExtractor(ctx, req.(*NlTokenizerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NlpProcs_ParseAmountTerms_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NlText)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NlpProcsServer).ParseAmountTerms(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nlpserv.NlpProcs/ParseAmountTerms",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NlpProcsServer).ParseAmountTerms(ctx, req.(*NlText))
	}
	return interceptor(ctx, in, info, handler)
}

var _NlpProcs_serviceDesc = grpc.ServiceDesc{
	ServiceName: "nlpserv.NlpProcs",
	HandlerType: (*NlpProcsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _NlpProcs_Ping_Handler,
		},
		{
			MethodName: "ParseDependency",
			Handler:    _NlpProcs_ParseDependency_Handler,
		},
		{
			MethodName: "GetPinyin",
			Handler:    _NlpProcs_GetPinyin_Handler,
		},
		{
			MethodName: "AddDocuments",
			Handler:    _NlpProcs_AddDocuments_Handler,
		},
		{
			MethodName: "GetNearestDocuments",
			Handler:    _NlpProcs_GetNearestDocuments_Handler,
		},
		{
			MethodName: "Tokenizer",
			Handler:    _NlpProcs_Tokenizer_Handler,
		},
		{
			MethodName: "EntityExtractor",
			Handler:    _NlpProcs_EntityExtractor_Handler,
		},
		{
			MethodName: "ParseAmountTerms",
			Handler:    _NlpProcs_ParseAmountTerms_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "nlpserv.proto",
}

// CabochaNlpProcsClient is the client API for CabochaNlpProcs service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CabochaNlpProcsClient interface {
	Tokenizer(ctx context.Context, in *NlText, opts ...grpc.CallOption) (*NlCabochaChunks, error)
}

type cabochaNlpProcsClient struct {
	cc *grpc.ClientConn
}

func NewCabochaNlpProcsClient(cc *grpc.ClientConn) CabochaNlpProcsClient {
	return &cabochaNlpProcsClient{cc}
}

func (c *cabochaNlpProcsClient) Tokenizer(ctx context.Context, in *NlText, opts ...grpc.CallOption) (*NlCabochaChunks, error) {
	out := new(NlCabochaChunks)
	err := c.cc.Invoke(ctx, "/nlpserv.CabochaNlpProcs/Tokenizer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CabochaNlpProcsServer is the server API for CabochaNlpProcs service.
type CabochaNlpProcsServer interface {
	Tokenizer(context.Context, *NlText) (*NlCabochaChunks, error)
}

func RegisterCabochaNlpProcsServer(s *grpc.Server, srv CabochaNlpProcsServer) {
	s.RegisterService(&_CabochaNlpProcs_serviceDesc, srv)
}

func _CabochaNlpProcs_Tokenizer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NlText)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CabochaNlpProcsServer).Tokenizer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nlpserv.CabochaNlpProcs/Tokenizer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CabochaNlpProcsServer).Tokenizer(ctx, req.(*NlText))
	}
	return interceptor(ctx, in, info, handler)
}

var _CabochaNlpProcs_serviceDesc = grpc.ServiceDesc{
	ServiceName: "nlpserv.CabochaNlpProcs",
	HandlerType: (*CabochaNlpProcsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Tokenizer",
			Handler:    _CabochaNlpProcs_Tokenizer_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "nlpserv.proto",
}
