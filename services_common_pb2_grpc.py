# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import metainfo_pb2 as metainfo__pb2
import services_common_pb2 as services__common__pb2
import values_pb2 as values__pb2


class SysInfoStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetSysInfo = channel.unary_unary(
        '/model.SysInfo/GetSysInfo',
        request_serializer=services__common__pb2.InfoQuery.SerializeToString,
        response_deserializer=services__common__pb2.InfoMap.FromString,
        )
    self.QueryMeta = channel.unary_unary(
        '/model.SysInfo/QueryMeta',
        request_serializer=metainfo__pb2.MetaQuery.SerializeToString,
        response_deserializer=metainfo__pb2.MetaPayload.FromString,
        )


class SysInfoServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def GetSysInfo(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def QueryMeta(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_SysInfoServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetSysInfo': grpc.unary_unary_rpc_method_handler(
          servicer.GetSysInfo,
          request_deserializer=services__common__pb2.InfoQuery.FromString,
          response_serializer=services__common__pb2.InfoMap.SerializeToString,
      ),
      'QueryMeta': grpc.unary_unary_rpc_method_handler(
          servicer.QueryMeta,
          request_deserializer=metainfo__pb2.MetaQuery.FromString,
          response_serializer=metainfo__pb2.MetaPayload.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'model.SysInfo', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class EntityServantStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetEntityNames = channel.unary_unary(
        '/model.EntityServant/GetEntityNames',
        request_serializer=services__common__pb2.InfoQuery.SerializeToString,
        response_deserializer=services__common__pb2.Names.FromString,
        )
    self.StoreAll = channel.unary_unary(
        '/model.EntityServant/StoreAll',
        request_serializer=values__pb2.TaStringEntriesBatch.SerializeToString,
        response_deserializer=services__common__pb2.ModifyInfo.FromString,
        )


class EntityServantServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def GetEntityNames(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def StoreAll(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_EntityServantServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetEntityNames': grpc.unary_unary_rpc_method_handler(
          servicer.GetEntityNames,
          request_deserializer=services__common__pb2.InfoQuery.FromString,
          response_serializer=services__common__pb2.Names.SerializeToString,
      ),
      'StoreAll': grpc.unary_unary_rpc_method_handler(
          servicer.StoreAll,
          request_deserializer=values__pb2.TaStringEntriesBatch.FromString,
          response_serializer=services__common__pb2.ModifyInfo.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'model.EntityServant', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
