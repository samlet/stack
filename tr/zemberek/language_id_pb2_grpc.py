# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import language_id_pb2 as language__id__pb2


class LanguageIdServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Detect = channel.unary_unary(
        '/zemberek.langid.LanguageIdService/Detect',
        request_serializer=language__id__pb2.LanguageIdRequest.SerializeToString,
        response_deserializer=language__id__pb2.LanguageIdResponse.FromString,
        )
    self.DetectFast = channel.unary_unary(
        '/zemberek.langid.LanguageIdService/DetectFast',
        request_serializer=language__id__pb2.LanguageIdRequest.SerializeToString,
        response_deserializer=language__id__pb2.LanguageIdResponse.FromString,
        )


class LanguageIdServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Detect(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DetectFast(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_LanguageIdServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Detect': grpc.unary_unary_rpc_method_handler(
          servicer.Detect,
          request_deserializer=language__id__pb2.LanguageIdRequest.FromString,
          response_serializer=language__id__pb2.LanguageIdResponse.SerializeToString,
      ),
      'DetectFast': grpc.unary_unary_rpc_method_handler(
          servicer.DetectFast,
          request_deserializer=language__id__pb2.LanguageIdRequest.FromString,
          response_serializer=language__id__pb2.LanguageIdResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'zemberek.langid.LanguageIdService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
