types:
    CatalogManagerSecurity:
        seed: |
            <!-- Catalog Manager security -->
            <SecurityGroup description="Limited Catalog Admin group, has limited catalog permissions." groupId="CATALOGADMIN_LTD" groupName="Catalog Admin (Limited)"/>
            <SecurityGroupPermission fromDate="2001-05-13 12:00:00.0" groupId="CATALOGADMIN_LTD" permissionId="CATALOG_VIEW"/>
            <SecurityGroupPermission fromDate="2001-05-13 12:00:00.0" groupId="CATALOGADMIN_LTD" permissionId="CATALOG_ROLE_CREATE"/>
            <SecurityGroupPermission fromDate="2001-05-13 12:00:00.0" groupId="CATALOGADMIN_LTD" permissionId="CATALOG_ROLE_UPDATE"/>
            <SecurityGroupPermission fromDate="2001-05-13 12:00:00.0" groupId="CATALOGADMIN_LTD" permissionId="CATALOG_ROLE_DELETE"/>
            <SecurityGroupPermission fromDate="2001-05-13 12:00:00.0" groupId="CATALOGADMIN_LTD" permissionId="OFBTOOLS_VIEW"/>

            <SecurityGroup description="Catalog Admin group, has all catalog permissions." groupId="CATALOGADMIN" groupName="Catalog Admin"/>
            <SecurityGroupPermission fromDate="2001-05-13 12:00:00.0" groupId="CATALOGADMIN" permissionId="CATALOG_ADMIN"/>
            <SecurityGroupPermission fromDate="2001-05-13 12:00:00.0" groupId="CATALOGADMIN" permissionId="CATALOG_PRICE_MAINT"/>
            <SecurityGroupPermission fromDate="2001-05-13 12:00:00.0" groupId="CATALOGADMIN" permissionId="OFBTOOLS_VIEW"/>
            <!-- NOTE DEJ20070810 where did this come from? has duplicate ID of that above: <SecurityGroup description="Catalog Admin View and Purchase Allow Products" groupId="CATALOGADMIN"/> -->

            <SecurityGroupPermission fromDate="2001-05-13 12:00:00.0" groupId="FLEXADMIN" permissionId="CATALOG_VIEW_ALLOW"/>
            <SecurityGroupPermission fromDate="2001-05-13 12:00:00.0" groupId="FLEXADMIN" permissionId="CATALOG_PURCHASE_ALLOW"/>

            <SecurityGroupPermission fromDate="2001-05-13 12:00:00.0" groupId="FULLADMIN" permissionId="CATALOG_ADMIN"/>
            <SecurityGroupPermission fromDate="2001-05-13 12:00:00.0" groupId="FULLADMIN" permissionId="CATALOG_PRICE_MAINT"/>
            <SecurityGroupPermission fromDate="2001-05-13 12:00:00.0" groupId="FULLADMIN" permissionId="CATALOG_VIEW_ALLOW"/>
            <SecurityGroupPermission fromDate="2001-05-13 12:00:00.0" groupId="FULLADMIN" permissionId="CATALOG_PURCHASE_ALLOW"/>

            <SecurityGroupPermission fromDate="2001-05-13 12:00:00.0" groupId="FLEXADMIN" permissionId="CATALOG_CREATE"/>
            <SecurityGroupPermission fromDate="2001-05-13 12:00:00.0" groupId="FLEXADMIN" permissionId="CATALOG_DELETE"/>
            <SecurityGroupPermission fromDate="2001-05-13 12:00:00.0" groupId="FLEXADMIN" permissionId="CATALOG_UPDATE"/>
            <SecurityGroupPermission fromDate="2001-05-13 12:00:00.0" groupId="FLEXADMIN" permissionId="CATALOG_VIEW"/>
            <SecurityGroupPermission fromDate="2001-05-13 12:00:00.0" groupId="FLEXADMIN" permissionId="CATALOG_PRICE_MAINT"/>
            <SecurityGroupPermission fromDate="2001-05-13 12:00:00.0" groupId="FLEXADMIN" permissionId="CATALOG_VIEW_ALLOW"/>
            <SecurityGroupPermission fromDate="2001-05-13 12:00:00.0" groupId="FLEXADMIN" permissionId="CATALOG_PURCHASE_ALLOW"/>

            <SecurityGroupPermission fromDate="2001-05-13 12:00:00.0" groupId="VIEWADMIN" permissionId="CATALOG_VIEW"/>
            <SecurityGroupPermission fromDate="2001-05-13 12:00:00.0" groupId="BIZADMIN" permissionId="CATALOG_ADMIN"/>
            <SecurityGroupPermission fromDate="2001-05-13 12:00:00.0" groupId="BIZADMIN" permissionId="CATALOG_PRICE_MAINT"/>


    ImageManagementSecurity:
        seed: |
            <!-- Image Management security -->
            <SecurityGroup description="Image Management Admin." groupId="IMAGEADMIN" groupName="Image Admin"/>
            <SecurityGroupPermission fromDate="2001-05-13 12:00:00.0" groupId="IMAGEADMIN" permissionId="IMAGE_MANAGEMENT_ADMIN"/>
            <SecurityGroupPermission fromDate="2001-05-13 12:00:00.0" groupId="IMAGEADMIN" permissionId="IMAGE_MANAGEMENT_APPROVE"/>
            <SecurityGroupPermission fromDate="2001-05-13 12:00:00.0" groupId="IMAGEADMIN" permissionId="IMAGE_MANAGEMENT_UPLOAD"/>
            <SecurityGroupPermission fromDate="2001-05-13 12:00:00.0" groupId="FULLADMIN" permissionId="IMAGE_MANAGEMENT_ADMIN"/>

            <SecurityGroup description="Image Management Approve" groupId="IMAGEAPPROVE" groupName="Image Approve"/>
            <SecurityGroupPermission fromDate="2001-05-13 12:00:00.0" groupId="IMAGEAPPROVE" permissionId="IMAGE_MANAGEMENT_APPROVE"/>

            <SecurityGroup description="Image Management Upload." groupId="IMAGEUPLOAD" groupName="Image Load"/>
            <SecurityGroupPermission fromDate="2001-05-13 12:00:00.0" groupId="IMAGEUPLOAD" permissionId="IMAGE_MANAGEMENT_UPLOAD"/>

    FacilityManagerSecurity:
        seed: |
            <!-- Facility Security Group Demo Data -->
            <!-- Facility Manager security -->
            <SecurityGroupPermission fromDate="2001-05-13 12:00:00.0" groupId="FULLADMIN" permissionId="FACILITY_ADMIN"/>
            <SecurityGroupPermission fromDate="2001-05-13 12:00:00.0" groupId="FLEXADMIN" permissionId="FACILITY_CREATE"/>
            <SecurityGroupPermission fromDate="2001-05-13 12:00:00.0" groupId="FLEXADMIN" permissionId="FACILITY_DELETE"/>
            <SecurityGroupPermission fromDate="2001-05-13 12:00:00.0" groupId="FLEXADMIN" permissionId="FACILITY_UPDATE"/>
            <SecurityGroupPermission fromDate="2001-05-13 12:00:00.0" groupId="FLEXADMIN" permissionId="FACILITY_VIEW"/>
            <SecurityGroupPermission fromDate="2001-05-13 12:00:00.0" groupId="VIEWADMIN" permissionId="FACILITY_VIEW"/>
            <SecurityGroupPermission fromDate="2001-05-13 12:00:00.0" groupId="BIZADMIN" permissionId="FACILITY_ADMIN"/>

    Warehouse:
        seed: |
            <Facility facilityId="WebStoreWarehouse" facilityTypeId="WAREHOUSE" facilityName="Web Store Warehouse"
                      description="Warehouse exclusively for the Web Store " ownerPartyId="Company"
                      defaultInventoryItemTypeId="NON_SERIAL_INV_ITEM" defaultWeightUomId="WT_lb" defaultDaysToShip="25" geoPointId="9000" facilityLevel="0"/>
            <Facility facilityId="RegionalWarehouse1" facilityTypeId="WAREHOUSE" facilityName="Regional Warehouse1" description="Warehouse exclusively for the Web Store " ownerPartyId="Company" defaultInventoryItemTypeId="NON_SERIAL_INV_ITEM" defaultWeightUomId="WT_lb" defaultDaysToShip="25" facilityLevel="1"/>
            <Facility facilityId="RegionalWarehouse2" facilityTypeId="WAREHOUSE" facilityName="Regional Warehouse2" description="Warehouse exclusively for the Web Store " ownerPartyId="Company" defaultInventoryItemTypeId="NON_SERIAL_INV_ITEM" defaultWeightUomId="WT_lb" defaultDaysToShip="25" facilityLevel="1"/>
            <Facility facilityId="StoreWarehouse1" facilityTypeId="WAREHOUSE" facilityName="Store Warehouse1" description="Warehouse exclusively for the Web Store " ownerPartyId="Company" defaultInventoryItemTypeId="NON_SERIAL_INV_ITEM" defaultWeightUomId="WT_lb" defaultDaysToShip="25" facilityLevel="2"/>
            <Facility facilityId="StoreWarehouse2" facilityTypeId="WAREHOUSE" facilityName="Store Warehouse2" description="Warehouse exclusively for the Web Store " ownerPartyId="Company" defaultInventoryItemTypeId="NON_SERIAL_INV_ITEM" defaultWeightUomId="WT_lb" defaultDaysToShip="25" facilityLevel="2"/>

    UserLoginSecurityGroup:
        seed: |
            <!-- Limited user demo -->
            <UserLoginSecurityGroup groupId="CATALOGADMIN_LTD" userLoginId="ltdadmin" fromDate="2001-01-01 12:00:00.0"/>
            <UserLoginSecurityGroup groupId="CATALOGADMIN_LTD" userLoginId="ltdadmin1" fromDate="2001-01-01 12:00:00.0"/>

            <!-- Image Management user demo -->
            <Party partyId="imageAdmin" partyTypeId="PERSON" statusId="PARTY_ENABLED"/>
            <Person partyId="imageAdmin" firstName="Image Management" lastName="Administrator"/>
            <PartyStatus partyId="imageAdmin" statusId="PARTY_ENABLED" statusDate="2001-01-01 12:00:00.0"/>
            <UserLogin userLoginId="imageAdmin" partyId="imageAdmin" currentPassword="{SHA}47b56994cbc2b6d10aa1be30f70165adb305a41a"/>
            <UserLoginSecurityGroup userLoginId="imageAdmin" groupId="FULLADMIN" fromDate="2010-01-01 12:00:00.0"/>
            <UserLoginSecurityGroup userLoginId="imageAdmin" groupId="IMAGEADMIN" fromDate="2010-01-01 12:00:00.0"/>

            <Party partyId="imageApprove" partyTypeId="PERSON" statusId="PARTY_ENABLED"/>
            <Person partyId="imageApprove" firstName="Image Management" lastName="Approve"/>
            <PartyStatus partyId="imageApprove" statusId="PARTY_ENABLED" statusDate="2001-01-01 12:00:00.0"/>
            <UserLogin userLoginId="imageApprove" partyId="imageApprove" currentPassword="{SHA}47b56994cbc2b6d10aa1be30f70165adb305a41a"/>
            <UserLoginSecurityGroup userLoginId="imageApprove" groupId="FLEXADMIN" fromDate="2010-01-01 12:00:00.0"/>
            <UserLoginSecurityGroup userLoginId="imageApprove" groupId="IMAGEAPPROVE" fromDate="2010-01-01 12:00:00.0"/>

            <Party partyId="imageUpload" partyTypeId="PERSON" statusId="PARTY_ENABLED"/>
            <Person partyId="imageUpload" firstName="Image Management" lastName="Upload"/>
            <PartyStatus partyId="imageUpload" statusId="PARTY_ENABLED" statusDate="2001-01-01 12:00:00.0"/>
            <UserLogin userLoginId="imageUpload" partyId="imageUpload" currentPassword="{SHA}47b56994cbc2b6d10aa1be30f70165adb305a41a"/>
            <UserLoginSecurityGroup userLoginId="imageUpload" groupId="CATALOGADMIN" fromDate="2010-01-01 12:00:00.0"/>
            <UserLoginSecurityGroup userLoginId="imageUpload" groupId="IMAGEUPLOAD" fromDate="2010-01-01 12:00:00.0"/>

            <PartyRole partyId="admin" roleTypeId="IMAGEAPPROVER"/>
            <!-- Product store group management demo -->
            <ProductStoreGroupType productStoreGroupTypeId="PSGT_AREA" description="Area cover"/>


    Category:
        services:
            addProductCategoryToCategory:
                productCategoryId: 'TPC'
                parentProductCategoryId: 'TPCP'
                fromDate: UtilDateTime.nowTimestamp()
                userLogin: userLogin
                _result: ProductCategoryRollup
            getProductCategoryAndLimitedMembers:
                productCategoryId: '101'
                prodCatalogId: 'DemoCatalog'
                defaultViewSize: 10
                limitView: true
                userLogin: userLogin
                _result: ProductCategoryMember
        seed: |
            <ProductCategoryType description="Test Category" hasTable="N" productCategoryTypeId="TEST_CATEGORY"/>
            <ProductCategory categoryName="Test Product Category Parent" longDescription="Long Test Product Category Parent Description" productCategoryId="TPCP" productCategoryTypeId="TEST_CATEGORY"/>
            <ProductCategory categoryName="Test Product Category" longDescription="Long Test Product Category Description" primaryParentCategoryId="TPCP" productCategoryId="TPC" productCategoryTypeId="TEST_CATEGORY"/>

    Issuance:
        # 一个需要两个库存项目中的库存的订单
        seed: |
            <!-- An order that needs stock from two inventory items -->
            <OrderHeader createdBy="admin" currencyUom="USD" entryDate="2011-08-12 23:17:11.507" grandTotal="105.14" orderId="DEMO81015" orderTypeId="SALES_ORDER" priority="2" productStoreId="9000" remainingSubTotal="79.56" salesChannelEnumId="WEB_SALES_CHANNEL" statusId="ORDER_APPROVED" visitId="10043"/>

            <OrderItem changeByUserLoginId="admin" isModifiedPrice="N" isPromo="N" itemDescription="Round Gizmo" orderId="DEMO81015" orderItemSeqId="00001" orderItemTypeId="PRODUCT_ORDER_ITEM" prodCatalogId="DemoCatalog" productId="GZ-2644" quantity="6.000000" selectedAmount="0.000000" statusId="ITEM_APPROVED" unitListPrice="48.000" unitPrice="38.400"/>

            <OrderContactMech contactMechId="9021" contactMechPurposeTypeId="ORDER_EMAIL" orderId="DEMO81015"/>
            <OrderContactMech contactMechId="9010" contactMechPurposeTypeId="SHIPPING_LOCATION" orderId="DEMO81015"/>

            <OrderRole orderId="DEMO81015" partyId="Company" roleTypeId="BILL_FROM_VENDOR"/>
            <OrderRole orderId="DEMO81015" partyId="DemoCustomer" roleTypeId="BILL_TO_CUSTOMER"/>
            <OrderRole orderId="DEMO81015" partyId="DemoCustomer" roleTypeId="END_USER_CUSTOMER"/>
            <OrderRole orderId="DEMO81015" partyId="DemoCustomer" roleTypeId="PLACING_CUSTOMER"/>
            <OrderRole orderId="DEMO81015" partyId="DemoCustomer" roleTypeId="SHIP_TO_CUSTOMER"/>

            <OrderPaymentPreference createdByUserLogin="admin" createdDate="2011-08-12 23:17:11.789" maxAmount="105.14" orderId="DEMO81015" orderPaymentPreferenceId="10020" overflowFlag="N" paymentMethodTypeId="EXT_OFFLINE" presentFlag="N" statusId="PAYMENT_NOT_RECEIVED" swipedFlag="N"/>

            <OrderItemShipGroup carrierPartyId="UPS" carrierRoleTypeId="CARRIER" contactMechId="9010" isGift="N" maySplit="N" orderId="DEMO81015" shipGroupSeqId="00001" shipmentMethodTypeId="NEXT_DAY"/>

            <OrderItemShipGroupAssoc orderId="DEMO81015" orderItemSeqId="00001" quantity="6.000000" shipGroupSeqId="00001"/>

            <OrderAdjustment amount="-8.840" createdByUserLogin="admin" createdDate="2011-08-12 23:17:11.708" description="10% off entire purchase" orderAdjustmentId="81015" orderAdjustmentTypeId="PROMOTION_ADJUSTMENT" orderId="DEMO81015" orderItemSeqId="_NA_" productPromoActionSeqId="01" productPromoId="9011" productPromoRuleId="01" shipGroupSeqId="_NA_"/>
            <OrderAdjustment amount="-103.600" createdByUserLogin="admin" createdDate="2011-08-12 23:17:11.708" description="Buy 4 items for $50 from Purple Gizmo [GZ-5005], Rainbow Gizmo [GZ-1004], Round Gizmo [GZ-2644] or Square Gizmo [GZ-2002] limit 2 per customer" orderAdjustmentId="81016" orderAdjustmentTypeId="PROMOTION_ADJUSTMENT" orderId="DEMO81015" orderItemSeqId="00001" productPromoActionSeqId="01" productPromoId="9015" productPromoRuleId="01" shipGroupSeqId="_NA_"/>
            <OrderAdjustment amount="-38.400" createdByUserLogin="admin" createdDate="2011-08-12 23:17:11.708" description="Get $500 off any item in the Small Gizmos [101] category, limit 1 per order, 2 per customer, 3 for entire promotion. Discount not to exceed the price of the item." orderAdjustmentId="81017" orderAdjustmentTypeId="PROMOTION_ADJUSTMENT" orderId="DEMO81015" orderItemSeqId="00001" productPromoActionSeqId="01" productPromoId="9016" productPromoRuleId="01" shipGroupSeqId="_NA_"/>
            <OrderAdjustment amount="24.700" createdByUserLogin="admin" createdDate="2011-08-12 23:17:11.708" orderAdjustmentId="81018" orderAdjustmentTypeId="SHIPPING_CHARGES" orderId="DEMO81015" orderItemSeqId="_NA_" shipGroupSeqId="00001"/>
            <OrderAdjustment amount="0.000" comments="Utah County, Utah Sales Tax" createdByUserLogin="admin" createdDate="2011-08-12 23:17:11.708" customerReferenceId="12-3456789" exemptAmount="0.00" orderAdjustmentId="81019" orderAdjustmentTypeId="SALES_TAX" orderId="DEMO81015" orderItemSeqId="_NA_" overrideGlAccountId="224153" primaryGeoId="UT-UTAH" shipGroupSeqId="00001" sourcePercentage="0.100000" taxAuthGeoId="UT-UTAH" taxAuthPartyId="UT_UTAH_TAXMAN" taxAuthorityRateSeqId="9005"/>
            <OrderAdjustment amount="0.000" comments="Utah County, Utah Sales Tax" createdByUserLogin="admin" createdDate="2011-08-12 23:17:11.708" customerReferenceId="12-3456789" exemptAmount="0.08" orderAdjustmentId="81020" orderAdjustmentTypeId="SALES_TAX" orderId="DEMO81015" orderItemSeqId="00001" overrideGlAccountId="224153" primaryGeoId="UT-UTAH" shipGroupSeqId="00001" sourcePercentage="0.100000" taxAuthGeoId="UT-UTAH" taxAuthPartyId="UT_UTAH_TAXMAN" taxAuthorityRateSeqId="9005"/>
            <OrderAdjustment amount="0.000" comments="Utah State Sales Tax" createdByUserLogin="admin" createdDate="2011-08-12 23:17:11.708" customerReferenceId="12-3456789" exemptAmount="4.19" orderAdjustmentId="81021" orderAdjustmentTypeId="SALES_TAX" orderId="DEMO81015" orderItemSeqId="00001" overrideGlAccountId="224153" primaryGeoId="UT" shipGroupSeqId="00001" sourcePercentage="4.750000" taxAuthGeoId="UT" taxAuthPartyId="UT_TAXMAN" taxAuthorityRateSeqId="9004"/>
            <OrderAdjustment amount="0.884" comments="1% OFB _NA_ Tax" createdByUserLogin="admin" createdDate="2011-08-12 23:17:11.708" orderAdjustmentId="81022" orderAdjustmentTypeId="SALES_TAX" orderId="DEMO81015" orderItemSeqId="00001" overrideGlAccountId="224000" primaryGeoId="_NA_" shipGroupSeqId="00001" sourcePercentage="1.000000" taxAuthGeoId="_NA_" taxAuthPartyId="_NA_" taxAuthorityRateSeqId="9000"/>

            <!-- OrderStatus of PAYMENT_NOT_RECEIVED automatically generated by an EECA -->
            <OrderStatus orderId="DEMO81015" orderStatusId="81015" statusDatetime="2011-08-12 23:17:11.507" statusId="ORDER_CREATED" statusUserLogin="admin"/>
            <OrderStatus orderId="DEMO81015" orderItemSeqId="00001" orderStatusId="81016" statusDatetime="2011-08-12 23:17:11.507" statusId="ITEM_CREATED" statusUserLogin="admin"/>

            <InventoryItemDetail accountingQuantityDiff="0.000000" availableToPromiseDiff="-5.000000" effectiveDate="2011-08-12 23:17:12.433" inventoryItemDetailSeqId="81015" inventoryItemId="9001" orderId="DEMO81015" orderItemSeqId="00001" quantityOnHandDiff="0.000000"/>
            <InventoryItemDetail accountingQuantityDiff="0.000000" availableToPromiseDiff="-1.000000" effectiveDate="2011-08-12 23:17:12.85" inventoryItemDetailSeqId="81016" inventoryItemId="9025" orderId="DEMO81015" orderItemSeqId="00001" quantityOnHandDiff="0.000000"/>

            <OrderItemShipGrpInvRes createdDatetime="2011-08-12 23:17:12.839" inventoryItemId="9001" orderId="DEMO81015" orderItemSeqId="00001" priority="2" promisedDatetime="2011-08-27 23:17:11.507" quantity="5.000000" reserveOrderEnumId="INVRO_FIFO_REC" reservedDatetime="2011-08-12 23:17:12.839" shipGroupSeqId="00001"/>
            <OrderItemShipGrpInvRes createdDatetime="2011-08-12 23:17:12.967" inventoryItemId="9025" orderId="DEMO81015" orderItemSeqId="00001" priority="2" promisedDatetime="2011-08-27 23:17:11.507" quantity="1.000000" reserveOrderEnumId="INVRO_FIFO_REC" reservedDatetime="2011-08-12 23:17:12.967" shipGroupSeqId="00001"/>

    ProductPrice:
        services:
            calculateProductPrice:
                productId: 'DemoProduct'
                _result: resultMap.defaultPrice

        seed: |
            <Product productId="DemoProduct" productTypeId="FINISHED_GOOD" productName="Demo Product" internalName="Test Product" isVirtual="Y" isVariant="N" createdDate="2006-03-23 23:05:32.915" />

            <Product productId="DemoProduct-1" productTypeId="FINISHED_GOOD" productName="Demo Product 1" isVirtual="N" isVariant="Y" createdDate="2006-03-23 23:05:32.915" />
            <Product productId="DemoProduct-2" productTypeId="FINISHED_GOOD" productName="Demo Product 2" isVirtual="N" isVariant="Y" createdDate="2006-03-23 23:05:32.915" salesDiscontinuationDate="2007-03-23 23:05:32.915"/>
            <Product productId="DemoProduct-3" productTypeId="FINISHED_GOOD" productName="Demo Product 3" isVirtual="N" isVariant="Y" createdDate="2006-03-23 23:05:32.915" />

            <ProductAssoc fromDate="2006-05-13 12:00:00.0" productAssocTypeId="PRODUCT_VARIANT" productId="DemoProduct" productIdTo="DemoProduct-2" quantity="1.0"/>
            <ProductAssoc fromDate="2006-05-13 12:00:00.0" productAssocTypeId="PRODUCT_VARIANT" productId="DemoProduct" productIdTo="DemoProduct-2" quantity="1.0"/>
            <ProductAssoc fromDate="2006-05-13 12:00:00.0" productAssocTypeId="PRODUCT_VARIANT" productId="DemoProduct" productIdTo="DemoProduct-3" quantity="1.0"/>

            <ProductPrice productId="DemoProduct-1" productPricePurposeId="PURCHASE" productPriceTypeId="DEFAULT_PRICE" currencyUomId="USD" productStoreGroupId="_NA_" fromDate="2006-05-13 12:00:00.0" price="15.00" createdDate="2006-05-13 12:00:00.0"  lastModifiedDate="2006-05-13 12:00:00.0"/>
            <ProductPrice productId="DemoProduct-2" productPricePurposeId="PURCHASE" productPriceTypeId="DEFAULT_PRICE" currencyUomId="USD" productStoreGroupId="_NA_" fromDate="2006-05-13 12:00:00.0" price="5.00" createdDate="2006-05-13 12:00:00.0"  lastModifiedDate="2006-05-13 12:00:00.0"/>
            <ProductPrice productId="DemoProduct-3" productPricePurposeId="PURCHASE" productPriceTypeId="DEFAULT_PRICE" currencyUomId="USD" productStoreGroupId="_NA_" fromDate="2006-05-13 12:00:00.0" price="10.00" createdDate="2006-05-13 12:00:00.0"  lastModifiedDate="2006-05-13 12:00:00.0"/>

    Costs:
        services:
            calculateProductCosts:
                productId: 'PROD_MANUF'
                currencyUomId: 'USD'
                costComponentTypePrefix: 'EST_STD'
                userLogin: userLogin
                _result: CostComponent
            getProductCost:
                productId: 'PROD_MANUF'
                currencyUomId: 'USD'
                costComponentTypePrefix: 'EST_STD'
                userLogin: userLogin
                _result: resultMap.productCost

        seed: |
            <!-- This is a finished good, PROD_COST, manufactured using 2 units of the raw material MAT_A_COST and 3 units of raw material MAT_B_COST -->
            <!-- Finished good and raw materials definitions: -->
            <Product productId="PROD_MANUF" productTypeId="FINISHED_GOOD" internalName="Demo Product for Costing" productName="Demo Product for Costing" description="Demo Product for Standard Costing" isVirtual="N" isVariant="N" billOfMaterialLevel="0"/>
            <Product productId="MAT_A_COST" productTypeId="RAW_MATERIAL" internalName="Demo Material A for Costing" description="Demo Material A for Standard Costing" isVirtual="N" isVariant="N" billOfMaterialLevel="1"/>
            <Product productId="MAT_B_COST" productTypeId="RAW_MATERIAL" internalName="Demo Material B for Costing" description="Demo Material B for Standard Costing" isVirtual="N" isVariant="N" billOfMaterialLevel="1"/>
            <ProductPrice productId="PROD_MANUF" productPricePurposeId="PURCHASE" productPriceTypeId="DEFAULT_PRICE" currencyUomId="USD" productStoreGroupId="_NA_" fromDate="2001-05-13 12:00:00.0" price="455.99" createdDate="2001-05-13 12:00:00.0" createdByUserLogin="admin" lastModifiedDate="2001-05-13 12:00:00.0" lastModifiedByUserLogin="admin"/>
            <ProductPrice productId="MAT_A_COST" productPricePurposeId="PURCHASE" productPriceTypeId="DEFAULT_PRICE" currencyUomId="USD" productStoreGroupId="_NA_" fromDate="2001-05-13 12:00:00.0" price="40.99" createdDate="2001-05-13 12:00:00.0" createdByUserLogin="admin" lastModifiedDate="2001-05-13 12:00:00.0" lastModifiedByUserLogin="admin"/>
            <ProductPrice productId="MAT_B_COST" productPricePurposeId="PURCHASE" productPriceTypeId="DEFAULT_PRICE" currencyUomId="USD" productStoreGroupId="_NA_" fromDate="2001-05-13 12:00:00.0" price="50.99" createdDate="2001-05-13 12:00:00.0" createdByUserLogin="admin" lastModifiedDate="2001-05-13 12:00:00.0" lastModifiedByUserLogin="admin"/>

            <!-- Cost information for the raw materials only (the ones for the finished good will be automatically computed by the costing algorithm): -->
            <CostComponent costComponentId="6000" costComponentTypeId="EST_STD_MAT_COST" productId="MAT_A_COST" fromDate="2005-12-31 00:01:00.0" costUomId="USD" cost="9"/>
            <CostComponent costComponentId="6001" costComponentTypeId="EST_STD_MAT_COST" productId="MAT_B_COST" fromDate="2005-12-31 00:01:00.0" costUomId="USD" cost="7"/>

            <SupplierProduct partyId="DemoSupplier" supplierPrefOrderId="10_MAIN_SUPPL" minimumOrderQuantity="0" currencyUomId="USD" productId="MAT_A_COST" lastPrice="9.0" supplierProductId="MAT_A" supplierProductName="Material A" availableFromDate="2005-01-01 00:00:00.000"/>
            <SupplierProduct partyId="DemoSupplier" supplierPrefOrderId="10_MAIN_SUPPL" minimumOrderQuantity="0" currencyUomId="USD" productId="MAT_B_COST" lastPrice="7.0" supplierProductId="MAT_B" supplierProductName="Material B" availableFromDate="2005-01-01 00:00:00.000"/>

            <ProductFacility productId="PROD_MANUF" facilityId="WebStoreWarehouse" minimumStock="0" reorderQuantity="1" daysToShip="1"/>
            <ProductFacility productId="MAT_A_COST" facilityId="WebStoreWarehouse" minimumStock="0" reorderQuantity="5" daysToShip="1"/>
            <ProductFacility productId="MAT_B_COST" facilityId="WebStoreWarehouse" minimumStock="0" reorderQuantity="5" daysToShip="1"/>

    ProductTest:
        seed: |
            <ProductType productTypeId="Test_type"/>
            <Product productId="Test_product_A" productTypeId="Test_type" productName="Test_name_A" description="This is original description"/>
            <Product productId="Test_product_B" productTypeId="Test_type" productName="Test_name_C" description="This is product description"/>
            <ProductFeature productFeatureId="Test_feature" description="Feature for testing purpose"/>
            <Product productId="Test_product_C" productTypeId="Test_type" description="description"/>
            <ProductStore productStoreId="Test_store"/>
            <ProductReview productReviewId="Test_review" productId="Test_product_C" productStoreId="Test_store" productRating="1.000000" productReview="Original review"/>
            <ProductStoreGroup productStoreGroupId="Test_group" productStoreGroupName="test group"/>
            <ProductPrice productId="Test_product_C" productPriceTypeId="AVERAGE_COST" productPricePurposeId="COMPONENT_PRICE" currencyUomId="USD" productStoreGroupId="Test_group" fromDate="2013-07-04 00:00:00" price="20"/>
            <ProductCategory productCategoryId="Test_category_A" productCategoryTypeId="USAGE_CATEGORY" longDescription="Original description" categoryName="Original_name"/>
            <ProductCategory productCategoryId="Test_category_B" productCategoryTypeId="USAGE_CATEGORY" longDescription="Category description" categoryName="Category_name"/>

    InventoryTests:
        services:
            getInventoryAvailableByFacility:
                productId: 'GZ-2644'
                facilityId: 'WebStoreWarehouse'
                userLogin: userLogin
            createPhysicalInventoryAndVariance:
                inventoryItemId: '9024'
                varianceReasonId: 'VAR_LOST'
                userLogin: userLogin
        seed: |
            <!--Demo Product Data-->
            <Product productId="GZ-2644" productTypeId="FINISHED_GOOD"  internalName="Round Gizmo" longDescription="A small round gizmo with multi-colored lights. Works great in the dark. Small and compact." isVirtual="N" isVariant="N" quantityIncluded="100.0" productWeight="7.0"/>
            <ProductPrice productId="GZ-2644" productPricePurposeId="PURCHASE" productPriceTypeId="SPECIAL_PROMO_PRICE" currencyUomId="USD" productStoreGroupId="_NA_" fromDate="2001-05-13 12:00:00.0" price="31.99" createdDate="2001-05-13 12:00:00.0"/>
            <ProdCatalog prodCatalogId="DemoCatalog" catalogName="Demo Catalog" useQuickAdd="Y"/>
            <ProductCategory productCategoryId="CATALOG1_BEST_SELL" productCategoryTypeId="BEST_SELL_CATEGORY" categoryName="Demo Best Selling"/>
            <ProdCatalogCategory prodCatalogId="DemoCatalog" productCategoryId="CATALOG1_BEST_SELL" fromDate="2010-01-01 12:00:00.0" sequenceNum="1" prodCatalogCategoryTypeId="PCCT_BEST_SELL"/>

            <ProductStore productStoreId="9000" storeName="OFBiz Ebay Store1-AU" companyName="Apache Ofbiz" title="Test OFBiz store1"/>
            <ProductStoreEmailSetting productStoreId="9000" emailType="PRDS_ODR_CONFIRM" bodyScreenLocation="component://ecommerce/widget/EmailOrderScreens.xml#OrderConfirmNotice" xslfoAttachScreenLocation="component://ecommerce/widget/EmailOrderScreens.xml#OrderConfirmNoticePdf" subject="OFBiz Demo - Order Confirmation #${orderId}" bccAddress="ofbiztest@example.com" fromAddress="ofbiztest@example.com"/>

    ProductConfigOption:
        services:
            createProductConfigOption: |
                serviceCtx.configItemId = 'testConfigItemId'
                serviceCtx.configOptionName = 'Test Config Option'
                serviceCtx.description = 'Test product config option'
                serviceCtx.userLogin = userLogin
                // from('ProductConfigOption')
        seed: |
            <ProductConfigItem configItemId="testConfigItemId" configItemName="Test Config Item Name" configItemTypeId="SINGLE" description="Test Desc" />


    ProductFeatureTypeTests:
        services:
            createProductFeatureType: |
                serviceCtx.productFeatureTypeId = 'testProdFeat'
                serviceCtx.description = 'Test Description'
                serviceCtx.hasTable = 'N'
                serviceCtx.userLogin = userLogin
                // from('ProductFeatureType')

    ProductPromoActionTests:
        services:
            loadCartFromOrder:
                orderId: orderId
                skipInventoryChecks: true, # the items are already reserved, no need to check again
                skipProductChecks: true, # the products are already in the order, no need to check their validity now
                userLogin: getUserLogin("system")
                _result: loadCartResp.shoppingCart
            productPromoActTaxPercent:
                shoppingCart: cart
                nowTimestamp: UtilDateTime.nowTimestamp()
                actionResultInfo: new ActionResultInfo()
                productPromoAction: productPromoAction
            productPromoActShipCharge:
                shoppingCart: cart
                nowTimestamp: UtilDateTime.nowTimestamp()
                actionResultInfo: new ActionResultInfo()
                productPromoAction: productPromoAction
            productPromoActProdSpecialPrice:
                shoppingCart: cart
                nowTimestamp: UtilDateTime.nowTimestamp()
                actionResultInfo: new ActionResultInfo()
                productPromoAction: productPromoAction

    ProductTagTest:
        services:
            createProductKeyword:
                productId: 'GZ-1000'
                productTags: ['test']
                _result: [ProductKeyword]
            updateProductKeyword:
                userLogin: systemUserLogin
                productId: 'GZ-1000'
                keyword: 'test'
                keywordTypeId: 'KWT_TAG'
                statusId: 'KW_APPROVED'
                _result: [ProductKeyword]
        workflow: |
            Step 1) Create a product tag.
                request.setParameter('productId', 'GZ-1000');
                request.setParameter('productTags', 'test');
                createProductKeyword
            Step 2) Check a product tag is created.
                productKeyword = from('ProductKeyword').where('productId', 'GZ-1000', 'keyword', 'test', 'keywordTypeId', 'KWT_TAG').queryOne()
                assert productKeyword.statusId == 'KW_PENDING'
            Step 3) Approve a product tag.
                updateProductKeywordMap = [
                        userLogin : systemUserLogin
                        productId : 'GZ-1000'
                        keyword : 'test'
                        keywordTypeId : 'KWT_TAG'
                        statusId : 'KW_APPROVED'
                ]
                Map resultMap = dispatcher.runSync('updateProductKeyword', updateProductKeywordMap)
            Step 4) Check a product tag is approved.
                checkProductKeywordApprove = from('ProductKeyword').where('productId', 'GZ-1000', 'keyword', 'test', 'keywordTypeId', 'KWT_TAG').queryOne()
                assert checkProductKeywordApprove.statusId == 'KW_APPROVED'
            Step 5) Create multiple product tag.
                request.setParameter('productId', 'GZ-1000');
                request.setParameter('productTags', '\'rock and roll\' t-shirt red');
                createProductKeyword

                GenericValue checkProductKeyword1 = from('ProductKeyword').where('productId', 'GZ-1000', 'keyword', 'rock and roll', 'keywordTypeId', 'KWT_TAG').queryOne()
                assert checkProductKeyword1 != null
                assert checkProductKeyword1.statusId == 'KW_PENDING'

                GenericValue checkProductKeyword2 = from('ProductKeyword').where('productId', 'GZ-1000', 'keyword', 't-shirt', 'keywordTypeId', 'KWT_TAG').queryOne()
                assert checkProductKeyword2 != null
                assert checkProductKeyword2.statusId == 'KW_PENDING'

                GenericValue checkProductKeyword3 = from('ProductKeyword').where('productId', 'GZ-1000', 'keyword', 'red', 'keywordTypeId', 'KWT_TAG').queryOne()
                assert checkProductKeyword3 != null
                assert checkProductKeyword3.statusId == 'KW_PENDING'
            Step 6) Approve all product tags.
                List<GenericValue> checkAllProductKeywordApproveList = from('ProductKeyword').where('productId', 'GZ-1000', 'statusId', 'KW_PENDING', 'keywordTypeId', 'KWT_TAG').queryList()
                for (GenericValue checkAllProductKeywordApprove : checkAllProductKeywordApproveList) {
                    updateProductKeywordMap = [
                            userLogin : systemUserLogin
                            productId : checkAllProductKeywordApprove.productId
                            keyword : checkAllProductKeywordApprove.keyword
                            keywordTypeId : checkAllProductKeywordApprove.keywordTypeId
                            statusId : 'KW_APPROVED'
                    ]
                    resultMap = dispatcher.runSync('updateProductKeyword', updateProductKeywordMap)
                    assert ServiceUtil.isSuccess(resultMap)
                }
            Step 7) Check all product tags is approved.
            Step 8) Check all product tags is created.

    Product:
        services:
            createProduct:
                internalName: internalName
                productTypeId: productTypeId
                userLogin: userLogin
                _result: [serviceResult.productId, Product]
            updateProduct:
                productId: productId
                productName: productName
                description: description
                userLogin: userLogin
            duplicateProduct:
                productId: productId
                oldProductId: oldProductId
                userLogin: userLogin
            quickAddVariant:
                productId: productId
                productFeatureIds: productFeatureIds
                productVariantId: productVariantId
                userLogin: userLogin
                _result: [Product.isVariant, ProductAssoc, ProductFeature]
            deleteProductKeywords:
                productId: productId
                userLogin: userLogin
                _result: [ProductKeyword]
            # 停止产品销售
            discontinueProductSales:
                productId: productId
                userLogin: userLogin
                _result: [product.salesDiscontinuationDate]
            # 产品评论
            createProductReview:
                productId: productId
                productStoreId: 'Test_store'
                productRating: new BigDecimal('5')
                productReview: 'Test review'
                userLogin: userLogin
                _result: [ProductReview]
            updateProductReview:
                productReviewId: productReviewId
                productRating: productRating
                productReview: productReview
                userLogin: userLogin
                _result: [ProductReview]

            findProductById:
                idToFind: 'Test_product_C'
                userLogin: userLogin
                _result: [serviceResult.product]
            createProductPrice:
                productId: productId
                productPriceTypeId: 'AVERAGE_COST'
                productPricePurposeId: 'COMPONENT_PRICE'
                productStoreGroupId: 'Test_group'
                currencyUomId: 'USD'
                price: new BigDecimal('30')
                fromDate: UtilDateTime.toTimestamp("04/07/2013 00:00:00")
                userLogin: userLogin
                _result: [ProductPrice]
            updateProductPrice:
                productId: productId
                productPriceTypeId: productPriceTypeId
                productPricePurposeId: productPricePurposeId
                productStoreGroupId: productStoreGroupId
                currencyUomId: currencyUomId
                price: new BigDecimal('30')
                fromDate: fromDate
                userLogin: userLogin
                _result: [productPrice.price]
            deleteProductPrice:
                productId: productId
                productPriceTypeId: productPriceTypeId
                productPricePurposeId: 'COMPONENT_PRICE'
                productStoreGroupId: productStoreGroupId
                currencyUomId: currencyUomId
                fromDate: fromDate
                userLogin: userLogin
            createProductCategory:
                productCategoryId: 'TEST_CATEGORY'
                productCategoryTypeId: 'USAGE_CATEGORY'
                userLogin: userLogin
                _result: [ProductCategory]
            updateProductCategory:
                categoryName: 'Updated Test Product Category'
                longDescription: 'Updated Long Test Product Category Description'
                productCategoryId: 'CATALOG1_BEST_SELL'
                productCategoryTypeId: 'BEST_SELL_CATEGORY'
                userLogin: userLogin
                _result: [ProductCategory]





